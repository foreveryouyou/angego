// Code generated for package web by go-bindata DO NOT EDIT. (@generated)
// sources:
// files/.dockerignore
// files/.gitignore
// files/Dockerfile
// files/README.md
// files/api_docs/.gitignore
// files/api_docs/01.index.http
// files/api_docs/02.api.http
// files/api_docs/http-client.env.json
// files/conf.example.yml
// files/dev_Dockerfile
// files/dev_build_docker.sh
// files/dev_docker-compose.yml
// files/docs/.gitignore
// files/global/a.go
// files/global/conf.go
// files/global/consts.go
// files/global/types.go
// files/go.mod
// files/go.sum
// files/libs/aes.go
// files/libs/controller.go
// files/libs/mongo.go
// files/libs/redis.go
// files/libs/resp.go
// files/main.go
// files/models/base.go
// files/models/base_pipeline.go
// files/prod_docker-compose.yml
// files/prod_docker_build.sh
// files/runtime/.gitkeep
// files/service/base.go
// files/static/favicon.ico
// files/static/index.html
// files/utils/upload/Oss.go
// files/utils/upload/alioss.go
// files/utils/utils.go
// files/www/middlewares/middlewares.go
// files/www/routes/a.go
// files/www/routes/funcs.go
// files/www/routes/r_a.go
// files/www/routes.go
// files/www/routes_api/a.go
// files/www/routes_api/funcs.go
package web

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _Dockerignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xca\x31\x0e\xc5\x20\x08\x00\xd0\x9d\x53\x90\xfc\xe5\xff\x05\x0f\xf1\x0f\xd2\x68\x25\x96\xa4\x0a\x41\x1c\xda\xd3\x77\xe8\xfe\x3e\xf8\x77\xce\xc1\x15\xcb\x85\x24\x6d\xa8\x33\xce\x65\xa6\x1e\x68\xe7\x6a\x32\xf0\x7b\xcc\x9b\xba\x16\xf9\x01\x35\x89\x17\x41\x22\xa9\x9c\x21\x65\x93\xad\xea\x3e\x21\xf9\x1a\x21\x9d\x01\x9e\x00\x00\x00\xff\xff\x38\xe7\x6f\xe2\x55\x00\x00\x00")

func DockerignoreBytes() ([]byte, error) {
	return bindataRead(
		_Dockerignore,
		".dockerignore",
	)
}

func Dockerignore() (*asset, error) {
	bytes, err := DockerignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".dockerignore", size: 85, mode: os.FileMode(420), modTime: time.Unix(1596776922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _Gitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd7\xcb\x4c\x49\x4d\xe4\xd2\x4f\xce\xcf\x4b\xd3\xab\xcc\xcd\xe1\xe2\x52\x56\x78\xb1\x7f\xc2\x8b\x85\x3d\xcf\xa6\x6f\x7b\x3e\x7b\xdd\xd3\xbd\x53\xb9\xf4\x8b\x4a\xf3\x4a\x32\x73\x53\xf5\xb5\xb8\x14\xe1\x6c\xbd\xf4\xcc\x92\xec\xd4\xd4\x02\x2e\x40\x00\x00\x00\xff\xff\xb2\xd0\x2f\x1d\x42\x00\x00\x00")

func GitignoreBytes() ([]byte, error) {
	return bindataRead(
		_Gitignore,
		".gitignore",
	)
}

func Gitignore() (*asset, error) {
	bytes, err := GitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".gitignore", size: 66, mode: os.FileMode(420), modTime: time.Unix(1596776922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xcf\x6b\xd4\x40\x18\xbd\xcf\x5f\xf1\xb1\xf1\xe8\x64\x3c\x88\x87\xc2\x1e\xd6\x6d\xbb\x16\xeb\xa6\xa4\x2d\x5a\x44\xda\x69\x66\x76\x32\x34\x99\x09\xf9\xd1\xad\xbd\xb6\xa2\x08\x2d\x82\x8b\x68\x15\xc5\x22\xb8\x50\x6a\x6f\x45\xdb\x82\xff\xcc\x66\xa3\xff\x85\x24\x93\xb6\x5a\x11\x4f\x09\x6f\x78\xef\x7d\xef\xfb\x9e\x65\x59\x30\x7e\xbf\x9d\x9f\x9e\x14\x83\x0f\xa3\x93\xcf\xc5\xee\x51\xbe\xbf\x85\x2e\x50\xa1\x03\xaa\x44\xfe\x62\xb7\x38\x38\x1a\xbf\xdb\xc9\x9f\x7f\x44\xd6\xb4\xeb\xdc\x03\xf3\x30\x41\x83\x48\x2a\x0e\xad\x79\x58\xcd\x64\xc0\xb0\x81\x91\xe5\x2e\x76\x41\x68\xe0\x6a\x1d\x70\x1f\x3a\xce\x9c\xeb\x3c\x58\x6a\xfa\x69\x1a\x25\x13\x84\x08\x1d\xc5\x7a\xe3\xb1\xed\xa9\xeb\x4c\xc6\xdc\x4b\x0d\x81\x46\x6b\x40\x19\x03\xbc\x08\x42\xa6\xa8\xf2\xe1\x1b\x92\xd1\x35\xae\x04\xf9\x8f\xa3\x05\x42\xb7\xa9\xe7\x73\xc8\x3f\xed\x14\x83\x21\xba\xef\xb8\x77\x27\x67\x5c\x20\x34\x8a\xca\x67\x03\x83\xd0\x76\xa8\x19\x14\x67\x2f\xf3\xc3\xd7\xa8\xed\xcc\x2d\x9d\x43\x42\xdb\x49\x16\x82\x4d\x50\x3d\x7d\x09\x32\xdd\x57\x81\xa6\xec\x22\x92\xe0\x29\xe0\xac\x1c\xd0\xcf\x56\x6d\x4f\x87\x24\xe9\x53\x21\x74\xf5\x21\x5e\xc8\xaa\x1f\x84\x2c\x63\x99\x3f\x3b\xce\x4f\x06\xc5\x60\x98\x3f\x19\xfe\xdc\x1a\x8e\x5f\x3d\x1d\x9d\x1e\x1b\x5b\xbb\x1e\xad\x14\x2e\x39\x20\x95\x4c\x2b\xde\xec\xe4\x74\x40\x45\x32\x3a\xdb\xfb\xb1\x7f\xb0\xc2\xb4\xb7\xc6\x63\x13\x17\x30\x8e\x43\xc0\xd8\x64\xa7\xb1\x58\x19\x7d\x3d\x2c\xf6\xb6\x6b\xc6\xf8\xed\xf7\xf1\xce\x3e\x6a\xb9\x9d\x73\x8d\x66\x03\x27\x80\xfb\x8d\x2a\x53\xc7\x71\xe6\x9b\x81\x54\xd9\x06\x74\x9c\x96\xdb\xbe\xd3\xa4\x21\xbb\x75\x13\xda\x1d\x67\x79\xaa\xdb\xba\x3d\x3b\x35\xd9\xbc\x51\x86\xac\xbd\x02\xd6\x33\x1a\xd7\x6a\xb5\x06\x60\x0d\x34\x8a\x96\x13\x1e\xaf\xf3\x18\x42\x2a\x95\x2d\x34\x42\x57\x6a\x94\x7f\xf9\x96\xbf\x19\xd6\x55\x31\x17\xfb\xeb\xc4\xe9\x26\xa3\x29\x35\x70\xa0\x00\x27\x3d\x20\x59\x12\x93\xc4\xa7\x31\x27\x9b\x5a\x71\xa9\x7a\x9a\xb4\x12\x49\xc9\xbc\x4f\x95\xf0\xa9\x04\x20\x3c\xf5\x48\xa0\x3d\x1a\xa4\x32\xe4\xb5\xc3\x65\x49\x6a\xaf\x0a\x4d\xbc\x98\xa6\x9e\x6f\x96\x8d\x71\x2f\xd6\x61\xf3\xf7\xce\x5c\xd1\xba\x2a\xfd\x6f\x1a\x8d\x22\x73\xba\x3f\x2a\x36\xd5\x5d\x70\x97\xe6\x9c\x99\xee\x02\x3c\x84\x46\x09\x91\xcb\x4d\x35\xe0\x11\xfa\x15\x00\x00\xff\xff\xa5\x04\xe2\xa5\x6c\x03\x00\x00")

func dockerfileBytes() ([]byte, error) {
	return bindataRead(
		_dockerfile,
		"Dockerfile",
	)
}

func dockerfile() (*asset, error) {
	bytes, err := dockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Dockerfile", size: 876, mode: os.FileMode(420), modTime: time.Unix(1605517834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _readmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\xc1\xce\x93\x40\x10\xc7\xef\x3c\xc5\x26\x5c\x2d\x0f\xa0\xa7\x2f\xf6\xec\x2b\x14\x84\xb5\x36\x96\x42\xb0\x6d\x6a\x1a\x92\x46\xdb\x88\x04\x2a\x1a\x3c\x28\xd5\x4a\x53\x53\x62\x22\x8d\x17\x52\x68\x1b\x5e\x66\x67\x17\x4e\xbe\x82\xa1\xab\xa6\x26\x7a\xfb\x6e\xcc\xfc\x87\xdf\xcc\xfe\x44\x34\x9d\x4a\x37\xa6\xf9\x40\xd1\xb1\x6d\x0b\x82\x6a\x61\x65\x88\xb5\x9b\xe1\xdd\x26\xb8\xff\xbb\x6a\x22\x51\x14\x11\x9c\x66\xf0\xfa\x0d\x5b\xee\x61\xf3\x82\x9c\x4b\x16\x26\x42\x0b\xc1\xd6\x07\x27\x43\xb2\x6a\x0c\x1e\x49\x78\xa2\xe8\x66\x1f\x4b\xcf\xf4\xbe\x8c\xc8\xa1\xf8\xd5\xbe\x94\x90\x67\xf4\x73\x4e\xfd\xb4\x5e\xcd\xe8\xf7\xe7\xa4\x4c\x69\x98\xc3\x22\x23\x87\x6f\xf5\xc2\x67\xe7\xf4\xc7\x29\x12\x5a\x88\xbe\xda\x55\xb1\x87\x64\x0d\x8f\x3b\x0f\x47\xbd\xbe\xd6\xd1\x0c\xf5\x09\xb6\xa4\xa7\x8f\x65\x04\x4e\x04\xc7\xe2\xfa\x0e\x1e\x42\x9a\xc3\xfb\x84\x03\xf8\x37\x9f\xa4\x4e\x00\xee\x1a\x82\xe5\x1f\xea\x65\x1c\xe1\x09\x56\x51\xab\x37\x6c\x9e\xd9\xbe\xb4\x1a\x05\x6d\x3c\xb6\x6d\xd4\xec\xa9\xca\x08\x16\x5f\x38\x89\x14\x5b\x52\xbc\x65\xef\xbc\xfa\xe3\xe6\x0e\x62\xf3\xec\x0a\xd7\x35\x90\x35\x1a\x20\x5d\xe9\x0d\xa4\xae\x21\x23\x08\xf6\xe0\x26\x75\x9c\xb3\x28\xbd\xc7\xa5\xb1\x70\x4d\x9d\x80\x1f\x4b\x3f\xcd\xe1\x58\xdc\xaa\x34\x72\x28\x58\xb8\x26\xc5\x8e\x6f\xf8\x97\x49\xd3\x32\xb4\xff\xa9\xbc\xfe\xf7\x6f\x95\x1e\x5d\xf9\xe0\xc6\xe4\xf4\xa1\x7a\xf9\x15\xdc\xa4\x2a\x83\x2a\xf6\x1a\xf2\xcf\x00\x00\x00\xff\xff\x29\xe7\x32\xe3\x36\x02\x00\x00")

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 566, mode: os.FileMode(420), modTime: time.Unix(1604830075, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _api_docsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xcf\x28\x29\x29\xd0\x4d\xce\xc9\x4c\xcd\x2b\xd1\x2b\x28\xca\x2c\x4b\x2c\x49\xd5\x4b\xcd\x2b\xd3\xcb\x2a\xce\xcf\xe3\x02\x04\x00\x00\xff\xff\xb2\x6c\x2d\x4d\x1e\x00\x00\x00")

func api_docsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_api_docsGitignore,
		"api_docs/.gitignore",
	)
}

func api_docsGitignore() (*asset, error) {
	bytes, err := api_docsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api_docs/.gitignore", size: 30, mode: os.FileMode(420), modTime: time.Unix(1596776922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _api_docs01IndexHttp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x56\x56\xc8\xcc\x4b\x49\xad\xe0\x72\x77\x0d\x51\xa8\xae\xce\xc8\x2f\x2e\xa9\xad\xd5\xe7\x72\x4c\x4e\x4e\x2d\x28\xb1\x52\x48\x2c\x28\xc8\xc9\x4c\x4e\x2c\xc9\xcc\xcf\xd3\xcf\x2a\xce\xcf\xe3\xe2\x02\xe9\x48\x4b\x2c\xcb\x4c\xce\xcf\x43\xd5\x03\x15\xd4\xcb\x4c\xce\x07\xab\x42\x95\x35\x31\x30\x21\x60\x28\xc4\x19\x01\xfe\xc1\xc8\xee\x70\xce\xcf\x2b\x49\xcd\x2b\xd1\x0d\xa9\x2c\x48\xc5\xa2\x11\xb7\x89\xd5\x5c\x0a\x0a\x4a\x99\x29\x4a\x56\x0a\x4a\x89\x89\x4a\x3a\x20\x5e\x5e\x62\x6e\x2a\x88\x9f\x94\xa4\xc4\x55\xcb\x05\x08\x00\x00\xff\xff\xa0\x3c\x9b\xf3\xfa\x00\x00\x00")

func api_docs01IndexHttpBytes() ([]byte, error) {
	return bindataRead(
		_api_docs01IndexHttp,
		"api_docs/01.index.http",
	)
}

func api_docs01IndexHttp() (*asset, error) {
	bytes, err := api_docs01IndexHttpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api_docs/01.index.http", size: 250, mode: os.FileMode(420), modTime: time.Unix(1596776922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _api_docs02ApiHttp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x56\x56\x48\x2c\xc8\x54\xc8\xcc\x4b\x49\xad\xe0\x72\x77\x0d\x51\xa8\xae\xce\xc8\x2f\x2e\xa9\xad\xd5\x4f\x2c\xc8\xd4\xcf\xc8\xcf\x4d\xe5\x72\x4c\x4e\x4e\x2d\x28\xb1\x52\x48\x2c\x28\xc8\xc9\x4c\x4e\x2c\xc9\xcc\xcf\xd3\xcf\x2a\xce\xcf\xe3\x02\x04\x00\x00\xff\xff\x15\x95\x4e\xcb\x3d\x00\x00\x00")

func api_docs02ApiHttpBytes() ([]byte, error) {
	return bindataRead(
		_api_docs02ApiHttp,
		"api_docs/02.api.http",
	)
}

func api_docs02ApiHttp() (*asset, error) {
	bytes, err := api_docs02ApiHttpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api_docs/02.api.http", size: 61, mode: os.FileMode(420), modTime: time.Unix(1596776922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _api_docsHttpClientEnvJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x4a\x49\x2d\x53\xb2\x52\x00\x31\x15\x14\x94\x32\xf2\x8b\x4b\x94\xac\x14\x94\x32\x4a\x4a\x0a\xac\xf4\xf5\x73\xf2\x93\x13\x73\xc0\x62\x5c\x0a\x0a\xb5\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\xe9\xff\x6f\x42\x32\x00\x00\x00")

func api_docsHttpClientEnvJsonBytes() ([]byte, error) {
	return bindataRead(
		_api_docsHttpClientEnvJson,
		"api_docs/http-client.env.json",
	)
}

func api_docsHttpClientEnvJson() (*asset, error) {
	bytes, err := api_docsHttpClientEnvJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api_docs/http-client.env.json", size: 50, mode: os.FileMode(420), modTime: time.Unix(1596776922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _confExampleYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xb1\x4a\x03\x41\x10\x86\xfb\x79\x8a\x1f\xae\x48\x65\x72\x89\xe8\xe9\x76\x8a\x4d\x0a\x21\x04\xc4\x7a\x93\x1d\xcd\xc1\xad\x7b\xec\xee\x69\x4a\x45\x2d\x95\x08\x16\xa6\x10\xc1\x42\x0b\xc1\x54\x36\x81\xbc\x8d\xb9\x33\x6f\x21\x77\x24\x8a\x85\xd5\xf2\xed\x7c\xfc\xff\x4c\x80\xfc\x61\x32\x1f\xbd\x14\xf7\x4f\x9f\xd3\xd7\xe2\x76\x32\x7f\xbe\xa4\xb6\xeb\x58\xa3\x04\x8e\x64\xe2\x98\x3a\xc6\x7a\x81\xad\x90\x02\x14\xb3\xbb\xe2\x6d\x9c\xd9\x84\x0e\xb9\x77\x60\x13\x81\x81\xf7\xa9\x13\x8d\x86\xac\xf7\x8d\xa6\x00\x8b\xc7\x71\x7e\x7e\xf1\xf5\x71\x95\x4f\x47\xa5\xd7\x65\xf7\xc7\xb3\xec\xea\x2b\x77\xdf\x9c\x1c\x9b\xbd\x5d\x2c\xae\x6f\x8a\xd9\x3b\x2d\x51\x10\x30\x30\xce\x97\x2f\xb0\x86\x9a\x2e\xff\x45\x2b\x0a\x9b\x51\x8d\x00\x25\xbd\xec\x49\xc7\x02\x8a\xb5\x21\x20\x73\x6c\x05\xac\x31\x9e\x80\x54\x3a\x77\x66\xac\x12\xe0\xa1\xd4\x69\xc2\x04\xf8\x58\xb3\xc9\xbc\x40\x93\x02\x74\x59\xc5\x6e\x55\x59\xc1\x4f\x21\x6c\x89\x1b\x65\x4a\x75\xf2\xe6\x7a\xb4\xfd\x4f\xe4\xef\x12\x21\x01\x5a\x0e\xdb\x2a\x61\x81\xd6\x92\x76\xfa\x3e\x3e\xad\x86\xdf\x01\x00\x00\xff\xff\xff\xea\x05\x3b\x60\x01\x00\x00")

func confExampleYmlBytes() ([]byte, error) {
	return bindataRead(
		_confExampleYml,
		"conf.example.yml",
	)
}

func confExampleYml() (*asset, error) {
	bytes, err := confExampleYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "conf.example.yml", size: 352, mode: os.FileMode(420), modTime: time.Unix(1604822175, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dev_dockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x56\x56\x78\x36\x67\xcd\xb3\x39\xbb\x9e\xee\x69\x78\xda\x3f\xf1\x79\xdf\xfa\xa7\x8b\x9a\xb9\xdc\x82\xfc\x7d\x15\x52\x2b\x32\x53\x12\xb3\x53\xf3\xd2\xf5\xd3\xf3\x73\x12\xf3\xd2\xad\x12\x73\x0a\x32\xf3\x52\xb9\x82\x42\xfd\x14\xd2\xf3\x15\xca\x52\x8b\x8a\x33\xf3\xf3\x14\xec\x14\xf4\x33\xf2\x73\x53\xf5\xd3\xf3\xe3\xa1\x42\x5c\x5c\xe1\xfe\x41\xde\x2e\x9e\x41\x0a\xfa\xe9\xf9\xfa\xc9\x89\xc9\x19\xa9\x5c\x8e\x2e\x2e\x0a\xe9\xf9\x7a\xb9\xf9\x29\x0a\x7a\x30\x4e\x71\x69\xae\x82\x1e\xcc\x38\x90\x4c\x4a\x7e\x79\x5e\x4e\x7e\x62\x0a\x92\x01\x89\x05\x05\x5c\x8e\x41\xee\x0a\x01\xfe\x41\x21\xb6\x16\x06\x5c\x5c\xae\x11\x01\xfe\xc1\xae\x0a\x2a\xd5\x20\x91\x5a\x2e\x67\x5f\x17\x85\x68\x05\x25\xfd\xa4\xcc\x3c\xfd\xe2\x0c\x25\x1d\x05\x25\xdd\x64\x10\x59\x92\x98\x99\xa3\xa0\x9b\x86\xe1\x36\x25\x85\x58\x2e\x40\x00\x00\x00\xff\xff\xcb\x04\x19\x6f\xf5\x00\x00\x00")

func dev_dockerfileBytes() ([]byte, error) {
	return bindataRead(
		_dev_dockerfile,
		"dev_Dockerfile",
	)
}

func dev_dockerfile() (*asset, error) {
	bytes, err := dev_dockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dev_Dockerfile", size: 245, mode: os.FileMode(420), modTime: time.Unix(1596776922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dev_build_dockerSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x2f\x2d\x2e\xd2\x4f\xca\xcc\xd3\x4f\xcd\x2b\x53\x48\x4a\x2c\xce\xe0\xe2\x4a\xc9\x4f\xce\x4e\x2d\xd2\x4d\xce\xcf\x2d\xc8\x2f\x4e\x55\xd0\x4d\x53\x50\x4a\x49\x2d\x8b\x47\x15\xd6\xab\xcc\xcd\x51\x52\x28\x2d\x50\xd0\x4d\x51\xd0\xd5\x4d\x2a\xcd\xcc\x49\xe1\x02\x04\x00\x00\xff\xff\xfa\xbe\xd3\xdd\x4e\x00\x00\x00")

func dev_build_dockerShBytes() ([]byte, error) {
	return bindataRead(
		_dev_build_dockerSh,
		"dev_build_docker.sh",
	)
}

func dev_build_dockerSh() (*asset, error) {
	bytes, err := dev_build_dockerShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dev_build_docker.sh", size: 78, mode: os.FileMode(493), modTime: time.Unix(1596776922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dev_dockerComposeYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xc1\x6a\xc3\x30\x0c\x86\xef\x7e\x0a\x91\x5d\x57\x27\xb0\xc3\x82\xce\x85\xdd\xd6\x52\x76\xd8\x18\xa3\x38\xb6\xd6\x99\xc6\x76\x90\xdd\xa4\xa5\xf4\xdd\x47\xdc\xa6\xe4\xd0\x93\xa5\x4f\xbf\xa4\xdf\x7a\x82\xbf\x94\xba\x88\x65\x69\x82\x8e\xd2\x04\xbd\x27\x96\x3a\xb8\x52\x07\xd7\x85\x48\xd3\xbb\xf8\xb5\x2d\x95\xa2\x27\x8e\x36\x78\x84\xe2\x45\xbe\x16\x42\x44\xe2\xde\x6a\x8a\x28\x00\xce\x67\xb9\xcc\xfd\xef\xca\xd1\x92\xfa\xcb\x65\xa4\x00\xcd\xc1\xb6\xe6\x1a\x02\xe8\xe0\x13\x1d\x13\x82\xbc\x81\xeb\xca\x71\x3a\x82\xa1\x7e\xbb\xbc\xe7\x62\xd2\x2b\xeb\x89\xb7\x5e\x39\xc2\x07\x4b\xb2\x8c\x29\x26\xc5\x09\x41\xb5\x83\x3a\xc5\xcc\x86\xc0\x7b\xeb\x77\x5b\x63\x19\xa1\x54\x5d\x97\x29\xf9\xde\x72\xf0\x8e\x7c\x9a\x3c\xbd\xad\xd6\x9b\xd5\xe7\x17\xde\x6f\xb1\x0b\x1d\x87\xe3\x49\x6a\xff\x6c\x2c\x93\x4e\x37\xe1\x7a\xb5\xf9\x40\xa8\xab\x9c\x76\x81\x53\x9c\x46\x2c\xa0\xa8\xab\xba\xc2\xba\x2a\x32\xe9\x43\x7b\x70\x34\x2b\x4b\x1c\x1d\x94\xc8\x43\x46\x9e\xd2\x68\x6f\x26\x18\xa8\xb9\xc7\xa6\xb9\xfd\xdd\x39\xe5\x0d\xc2\x37\xfc\x08\x31\x6f\x19\xa8\xb9\x76\xd2\x31\x11\x7b\xd5\x22\x24\x3e\x8c\x17\x33\x8f\x0b\xff\x01\x00\x00\xff\xff\xb2\xcd\x51\xc0\xe8\x01\x00\x00")

func dev_dockerComposeYmlBytes() ([]byte, error) {
	return bindataRead(
		_dev_dockerComposeYml,
		"dev_docker-compose.yml",
	)
}

func dev_dockerComposeYml() (*asset, error) {
	bytes, err := dev_dockerComposeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dev_docker-compose.yml", size: 488, mode: os.FileMode(420), modTime: time.Unix(1604828645, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _docsGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xe2\x52\xd4\x4b\xcf\x2c\xc9\x4c\xcf\xcb\x2f\x4a\xe5\x02\x04\x00\x00\xff\xff\x17\xeb\x9a\xa9\x0e\x00\x00\x00")

func docsGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_docsGitignore,
		"docs/.gitignore",
	)
}

func docsGitignore() (*asset, error) {
	bytes, err := docsGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "docs/.gitignore", size: 14, mode: os.FileMode(420), modTime: time.Unix(1596776922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _globalAGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4f\x4b\x1c\x49\x14\x3f\x77\x7d\x8a\xb7\x7d\xd0\x19\x18\xbb\x97\x3d\x2d\x0d\x73\x70\x05\xc5\xc3\xb2\xa2\xbb\x9b\x5c\x6b\xba\xab\xbb\x0b\x6b\xaa\x86\xaa\x6a\x07\x19\x06\x8c\x28\x1a\x92\xe0\x29\x9a\x48\x12\x12\x88\x18\x48\x48\x22\x48\x20\x90\xe0\x97\xb1\x67\x9c\x6f\x11\x5e\x75\x3b\x99\x40\x0e\x39\xbd\xaa\x57\xbf\xf7\x7e\xbf\xf7\xa7\x7a\x34\xde\xa4\x19\x83\x4c\xa8\x0e\x15\x84\xf0\x6e\x4f\x69\x0b\x0d\xe2\x09\x95\x81\x9f\x71\x9b\x17\x9d\x20\x56\xdd\xd0\x70\x5d\xf4\x0c\x93\xa1\x50\x99\x2e\x8c\x4f\x3c\x3f\x53\xbd\xcd\x2c\xe0\x32\xdc\xa6\x5d\x11\x6c\xfd\x81\x3e\xae\x42\xae\x0a\xcb\x05\x5e\x7a\xd4\xe6\x61\xca\x05\xc3\x03\x3a\x74\x21\x2d\xef\x32\x9f\x34\x09\x09\x43\x58\x71\xac\x50\xee\xbf\x29\x2f\x76\xca\xa3\x27\x93\x83\xa3\xd1\xe1\x71\x79\xf1\x62\xb4\x73\x4e\xb6\xa8\x46\x1d\x61\x08\x93\x9d\xd3\x9b\xab\x03\xc8\x14\x74\x0a\x2e\x12\x58\x10\x49\x2a\x68\x66\x60\x7c\xba\x07\x0b\x77\xa1\x3c\xda\x1d\x3d\xfe\x78\xfd\xe5\x65\xb9\x7f\x46\xbc\xbf\x10\xf3\x2f\xef\x32\x30\x56\x73\x99\x41\x18\x56\x71\xa3\x93\x4f\x93\x93\x4b\xd2\x74\x99\x1d\x6a\x45\xfd\xcf\xb4\xe1\x4a\x42\x1b\x6a\x69\x41\xed\x69\x34\xa7\x71\xe3\xd3\xbd\x4c\x8d\xef\x1f\x8e\x9e\xbd\xbb\xbe\x7a\x35\xba\xf7\xc1\x69\x1f\xbf\x7d\x3a\xde\xfd\x3c\xd9\x7f\x34\xfe\xfa\xde\x65\xdc\x58\x52\x32\x85\x36\xcc\x6d\x70\xcb\xf0\xcc\xb3\x01\xf1\x56\xcd\x9a\x56\x49\x04\x29\x15\x86\xb5\x88\xb7\xa6\xb4\x8d\x00\xc0\xff\xf3\x77\xbf\x45\xbc\xbf\x95\xcc\x54\x04\xe0\x2c\x06\x0d\x86\x2d\xe2\xad\xb3\x84\x9b\x08\xc0\xd9\x3a\x15\xfa\xef\xb0\xa5\x9c\xda\x08\x2a\x3b\xf3\xb0\x28\xf8\x3f\xc6\x44\x40\x9d\x45\xd7\xd0\x89\x5c\x95\xbc\x86\x41\x79\xf8\xbc\x3c\x7f\x50\x3e\x3c\xfe\x41\x78\x5a\xc8\x78\x06\xd5\x88\x9d\x59\xe6\xe2\xb6\x7b\x4d\x18\x10\x8f\x69\x0d\x51\x1b\x78\x8d\x9b\x41\xb5\x60\xce\xd5\xdd\x24\x1e\x4f\x01\x71\xbf\xb5\x41\x72\x81\x51\xb8\x42\xc1\x32\xb5\x54\x34\xfc\x8a\x6e\xaa\xa1\x7c\x7d\x71\x73\x79\x16\xf9\x2d\x0c\x69\x12\x6f\x48\x3c\xcd\x6c\xa1\x65\xad\x1b\x09\xa0\xa7\xb8\xb4\x4c\x57\x1a\xa7\xdc\xb8\x4e\x92\x4e\xa7\xdb\xaa\xb0\x0e\x99\xd2\x98\x0d\x86\x4d\x68\xa0\x0e\xa6\xb5\xd2\x4e\x7d\x18\x42\xc6\x2c\xd8\x9c\x01\xed\x18\x77\xef\xe7\x3c\xce\xa1\xcf\x85\x00\xab\xb7\xc1\x2a\x48\xb9\x4c\x1c\x64\xfe\x96\x60\x1e\x52\xad\xba\x10\x17\x5a\x33\x69\xa1\xaf\xf4\x26\x62\x12\xae\xc1\x2a\x15\x10\x0f\xb7\x7e\xb1\x63\xd6\xa8\xcd\x5d\x1d\xd8\xa2\xdb\x65\x0f\x16\x3b\x66\x2a\xf5\xa7\xcd\xa9\xeb\xf5\x86\xc4\x29\xd2\x8c\x56\xfc\x9a\xf6\xb1\x24\xcb\xa4\x35\xa0\x52\xe7\xc3\x44\xc4\x4b\xa8\xa5\x53\xa2\xea\x93\x05\xeb\x8c\x26\x38\x87\xc6\x8c\x98\x5f\xa1\xeb\x15\x76\x9a\x79\xde\x7c\x27\xa4\x06\x30\x13\x76\x04\x9f\x13\x96\xd2\x42\x58\xa8\x06\x5e\x68\x6a\xf1\x6b\xc4\xd5\xc0\x91\xa1\xed\xe0\xc1\x7f\xb2\x4b\xb5\xc9\xa9\x68\x54\x22\x6b\x44\x45\x8a\x1a\xc8\x90\x7c\x0b\x00\x00\xff\xff\xf3\x03\x4b\x12\x6b\x04\x00\x00")

func globalAGoBytes() ([]byte, error) {
	return bindataRead(
		_globalAGo,
		"global/a.go",
	)
}

func globalAGo() (*asset, error) {
	bytes, err := globalAGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "global/a.go", size: 1131, mode: os.FileMode(420), modTime: time.Unix(1605338509, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _globalConfGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xc1\x6e\xd3\x40\x10\x3d\xdb\x5f\x31\xca\x19\xe1\x3b\xb7\xb4\x89\x44\x54\x15\xaa\xa6\x55\x0f\x08\xa9\x6b\x7b\x70\x57\xb1\xbd\x96\x77\x4d\x89\x10\x12\x45\x20\x2e\x20\xe8\x8d\x1c\x38\x54\x1c\x23\xb5\x27\x0e\x54\x2a\xf9\x99\x34\x26\x7f\x81\xec\xdd\xd8\x5e\x7b\x83\xc8\x65\xa5\x79\xf3\x66\x77\x9e\xdf\x4b\x42\xbc\x09\x09\x10\x82\x90\xb9\x24\xb4\x6d\x1a\x25\x2c\x15\xd0\x13\x34\xc2\x9e\x6d\x3b\x0e\xe4\xf3\x59\xfe\xee\xd7\x72\x71\xb5\xba\xb8\x59\x7f\xf8\x9c\xdf\x5d\xdb\x62\x9a\x20\x8c\xa9\xc0\x5d\x16\xbf\xa0\x01\x70\x91\x66\x9e\x80\xd7\xb6\x35\xe2\x07\x29\xf3\xc1\x65\x2c\x84\xcd\xef\x74\x4a\xa2\xf0\x51\x4f\x42\x0f\x58\x44\x05\x46\x89\x98\xf6\x4e\x01\x1c\xc7\xb6\x0e\x8a\xfb\xa0\x98\x41\xe3\x40\xa7\x14\x90\x4e\x28\x28\x70\x8e\x6e\x3e\xbf\xb9\xff\xf2\xc3\xb6\x4e\xd0\x3d\x4e\x43\x23\x59\x42\xed\xfb\x20\xbf\xbb\xcc\xe7\xb3\x2c\x0d\x6d\xeb\x10\xf9\x36\xb2\x84\x3a\xe4\xf5\xf7\xd9\xea\xed\xc5\x9f\x9f\xef\x57\xb7\x5f\xcb\x11\xfb\x2c\x0e\x18\x40\x79\x14\x62\x34\x46\x94\xb5\xc1\x8e\x36\xc3\x71\x40\x95\x41\x49\x69\x1d\xa2\x4f\x39\x40\x79\x28\x39\xeb\x47\xf8\x94\xb7\xf6\x77\x1c\xd9\x5a\xf1\x4f\x70\xf7\x8c\x08\x90\x87\x1a\x50\x29\x50\xd4\x3a\x4b\xdc\xff\xbe\x5e\x2e\xae\xaa\x01\xfd\x90\x3e\xe5\x1c\x88\x3c\x34\x15\x24\xd4\x55\xe1\xdb\x62\xfd\xf1\xd3\xf2\xf6\x72\x33\xe3\x4d\x69\x14\xed\x5d\xa5\x45\x9a\x4b\xd5\x1e\x79\xcc\xb8\x90\xd7\x28\xe5\xd5\x6d\x67\x8c\x6b\x8f\xad\xac\xd1\xe9\x4c\x5a\xbe\xb0\xad\x01\x11\xc4\x25\x1c\x01\x68\x2c\x1a\x1b\xf8\xaa\xde\x9a\x4b\x38\x3f\x67\xa9\xdf\x99\xab\xea\x7a\xf7\x3e\x79\x35\xf2\x43\x84\xf6\xec\x48\xd6\x3b\xcd\x7d\x4f\xd0\x97\xd8\x6d\x96\x75\xad\x5d\x0a\xa7\x7f\x90\x52\x39\xed\x73\xd6\xd2\xf5\x93\x64\x34\xa8\x82\xd5\x7a\x7d\x09\xea\xaf\xe9\x27\xc9\x18\xbd\x14\x8d\x2a\x56\xa0\xce\x39\x62\x13\x8c\xb7\xdd\x51\x82\x7a\xff\x30\xf6\x98\x4f\xe3\xa0\x3f\x1c\xef\xe1\xb4\xd5\xaf\x83\x86\xdd\x5b\x71\x28\x97\xaf\xd3\x64\x30\xcd\xb3\xe7\xcd\xbc\x6e\xb5\x4e\x65\x08\x2d\xdd\xff\xb6\xc5\x31\xc7\xb4\xb9\xb3\xce\xc9\x38\xa6\x5b\x6c\x64\xec\x37\x9b\xe9\x88\x46\xc8\x32\x01\x50\xfc\xc1\x3e\x1c\x64\x29\x11\x94\xc5\x1b\x8e\x90\xa8\x41\xa7\x2a\x73\x8c\xf3\xa6\x56\x2a\xb6\x0d\x8b\x78\x1e\x72\xbe\x87\xd3\x91\x6f\xf8\x7e\xa4\x46\x5b\x4e\xd9\x00\xca\x2f\x5b\x68\x26\xc3\xd4\x79\xfe\xbf\x54\x0f\x63\x3f\x61\x2a\x1d\xdd\x7e\x54\xa8\xce\xd9\xc9\xbc\x09\x8a\x27\x24\x42\x13\xc7\xad\xd0\x96\x72\x7f\x03\x00\x00\xff\xff\x4f\x95\xe3\xdf\xde\x06\x00\x00")

func globalConfGoBytes() ([]byte, error) {
	return bindataRead(
		_globalConfGo,
		"global/conf.go",
	)
}

func globalConfGo() (*asset, error) {
	bytes, err := globalConfGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "global/conf.go", size: 1758, mode: os.FileMode(420), modTime: time.Unix(1596776922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _globalConstsGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\x48\xcf\xc9\x4f\x4a\xcc\xe1\x02\x04\x00\x00\xff\xff\x32\x37\xa5\xbc\x0f\x00\x00\x00")

func globalConstsGoBytes() ([]byte, error) {
	return bindataRead(
		_globalConstsGo,
		"global/consts.go",
	)
}

func globalConstsGo() (*asset, error) {
	bytes, err := globalConstsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "global/consts.go", size: 15, mode: os.FileMode(420), modTime: time.Unix(1605338536, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _globalTypesGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x3d\x4b\xc3\x40\x1c\x87\xe7\xdc\xa7\xf8\x93\xb9\x10\x07\x71\xe8\x6a\x5d\x84\x2e\x3a\x8a\x90\x6b\x72\x3d\xa2\x79\xe3\xee\x9f\xa1\x94\x0e\xa5\x88\x93\xd5\x21\x1d\x44\xad\x2f\x08\x3a\x99\xcc\x71\xe8\x97\x49\x72\xe9\xb7\x90\x70\x16\x0a\xa5\xb7\x1c\xc7\x73\xbf\x87\x27\xa6\xce\x35\xe5\x0c\xb8\x1f\x0d\xa8\x4f\x08\x8e\x62\x06\x7d\x08\x68\x7c\x21\x51\x78\x21\xbf\xf4\x42\x64\x62\x48\x1d\x36\x9e\x6c\xf0\x39\x8a\xed\x1f\xfa\xfa\x87\xa7\x32\x0a\xcf\x98\x8c\x41\xa2\x48\x1c\x84\x31\x31\x4e\x84\x38\x8e\x5c\x06\x5e\x88\x47\x87\xa0\x8f\x7d\x25\xa3\xb0\x6b\x32\x8d\x4c\x70\xd9\x90\x26\x3e\x76\xcd\x03\xd3\x06\xcb\x82\x75\xfa\xd8\x64\x99\x7a\x9b\x12\xa3\x47\x91\xb6\x93\xad\x90\xcd\xdc\xa5\x48\x3b\x51\xe0\x21\x0b\x62\x1c\x99\xb6\x76\x5b\x16\x34\xab\xb4\x7a\x5a\xd6\x8b\xbc\xbe\xfb\x21\x46\x5f\x72\xd8\x63\x08\x24\xdf\x15\xb4\x86\xfa\xfe\x41\x7d\x16\xe5\xea\xbd\x9e\x66\x96\xae\xd1\x0f\x62\xf4\xd8\x20\xe1\x7b\x82\x5a\xb4\x23\x6c\x83\xf2\x59\x93\x2d\x74\x50\xa7\xfc\xbd\xa9\x9e\xbf\xd7\x2f\x4b\x95\xbe\x96\xc5\x97\x9a\x67\xd5\xc7\xac\xba\x2d\xd4\x3c\x27\x13\xf2\x17\x00\x00\xff\xff\x31\x4c\xa4\x46\x93\x01\x00\x00")

func globalTypesGoBytes() ([]byte, error) {
	return bindataRead(
		_globalTypesGo,
		"global/types.go",
	)
}

func globalTypesGo() (*asset, error) {
	bytes, err := globalTypesGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "global/types.go", size: 403, mode: os.FileMode(420), modTime: time.Unix(1605277432, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _goMod = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x4d\x8e\xdc\x20\x10\x85\xd7\xe3\x53\x78\x99\x2c\x80\x2a\xf0\x4f\xfb\x10\xc9\x1d\x00\x63\x06\xb5\x4d\x39\x60\xac\x58\xa3\xb9\x7b\xe4\x9e\x44\x99\xee\xa8\xb3\x7b\x92\x3f\x7f\xf5\x1e\x0b\x8d\x65\x76\xf5\xdb\x1b\xff\x76\x4b\xdf\xf5\xe2\xde\xdf\xab\xca\x53\x8d\x1c\x9b\xaa\x4a\xee\x47\x09\xc9\xd5\x5f\xaa\x17\x1f\xb6\xd7\x62\xb8\xa5\x45\x18\x1d\x8e\x62\x42\x14\x7a\x0e\x47\x89\x2c\x6f\x99\x79\x62\x79\xbc\xd6\x3b\x70\xe0\xc0\x24\xe0\x05\x94\xec\xa0\x93\x4a\x36\xcc\x4e\x1a\x35\x5e\x0c\x76\x38\xd5\x42\xd4\x21\x8e\x21\x39\xbb\xdd\x59\xbd\x4e\x87\x29\x69\x14\xc9\x8d\xc1\x53\xbd\x23\xef\x38\xdc\x23\x21\x32\x4b\x71\x4b\xc1\x08\x4b\x29\x9f\x8c\xe2\xf8\x0f\xe3\x29\x06\x7b\xa6\x0f\x89\xba\x07\x68\xd6\xd1\x8b\x35\xd1\x46\xa6\x4c\x27\xd2\x70\xf9\xb4\xd6\x75\xd6\x25\xaf\x94\x37\x61\x69\x59\x93\xcb\xb7\xab\x08\xbc\x79\xfa\x4b\x0e\xa9\xac\xd9\x45\x31\x93\x4f\x25\xff\xbe\x50\xbd\x78\xe2\x0b\x45\x4f\xa3\xe1\x94\xbc\xb8\x65\x36\xa6\xb0\xbb\xf4\xb1\xa4\x39\x99\xb3\xdd\xed\xfb\x4f\x61\xd3\xb1\x6e\xf4\xe9\x51\x07\x94\xd0\x61\x2f\x5b\x05\xcc\x0d\x46\x4e\xce\x35\x5d\x83\xea\xa1\xca\x67\x47\x3e\xf2\x5f\x81\x04\x68\x71\x40\x68\xfb\xb6\x67\x93\xeb\x3b\xd3\xf7\xc3\x24\x87\xe1\x3f\x82\x2d\x2c\xee\xce\xd0\x29\xc0\x5e\x81\x04\xa6\xf4\xd4\xb7\xdd\x30\x2a\x8d\xee\xd1\xb0\x5e\x3d\x0f\x51\xd8\x57\x67\xaf\x7c\xc7\x73\xe0\x9f\x11\x30\x80\x84\x0b\xb4\x20\x59\x83\x13\x34\xa3\x32\x46\x63\xfb\xc4\x70\xe8\x65\xe6\xbb\xac\x77\xc9\x15\x87\xea\x6b\xf5\x2b\x00\x00\xff\xff\xfd\xb3\x32\xfa\xb6\x02\x00\x00")

func goModBytes() ([]byte, error) {
	return bindataRead(
		_goMod,
		"go.mod",
	)
}

func goMod() (*asset, error) {
	bytes, err := goModBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "go.mod", size: 694, mode: os.FileMode(420), modTime: time.Unix(1604725921, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _goSum = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func goSumBytes() ([]byte, error) {
	return bindataRead(
		_goSum,
		"go.sum",
	)
}

func goSum() (*asset, error) {
	bytes, err := goSumBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "go.sum", size: 0, mode: os.FileMode(420), modTime: time.Unix(1604830466, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _libsAesGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\xcd\x6e\xda\x4a\x14\x5e\x7b\x9e\xe2\x5c\xa4\x2b\xcd\x5c\x11\x73\x21\x88\x2b\x71\xe3\x4a\x0d\xc9\x2a\x4d\x54\x85\x64\x15\x21\x64\xcc\x09\xb1\x20\xb6\x35\x36\xa5\x14\xb1\x8e\xd4\x9f\x45\x17\xdd\xf7\x11\x2a\x55\xaa\xba\xe9\xdb\xa4\x6d\x1e\xa3\x3a\x67\xc6\xc6\x21\x21\x3f\x9b\x98\x33\x67\xbe\x73\xce\xf7\x7d\x33\x93\xf8\xc1\xd8\x1f\x21\x4c\xc2\x41\x2a\x44\x78\x99\xc4\x3a\x03\x29\x9c\xca\x60\x9e\x61\x5a\x11\x4e\x25\xd0\xf3\x24\x8b\x6b\xfe\xad\x5f\x41\x98\x5c\xa0\xa6\x00\x46\x41\x3c\x0c\xa3\x51\x6d\xe0\xa7\xd8\x6a\x72\x48\xeb\x58\xa7\x15\xa1\x84\xc8\xe6\x09\xc2\xe1\xfc\x39\xa6\x90\x66\x7a\x1a\x64\xb0\x10\xce\x01\xce\xc1\xfc\x9d\xf5\xa8\x8c\x70\x06\x93\x38\x18\x73\xc4\x00\xbb\xbb\x14\xb0\xf1\x6e\xf8\x06\x21\x8c\x32\xb1\x14\xe2\x7c\x1a\x05\x70\x84\x33\x86\x94\x63\x9c\x13\x6c\x18\x8d\x14\xc8\x04\xfe\xe1\x68\x15\x50\x6b\xe0\x1e\x14\x55\x4b\xc0\x83\x08\x67\x92\x17\x95\x70\x12\x97\xea\x7b\xb6\x36\x61\x28\xe1\xd4\x6a\x50\x6f\x55\x1b\xcd\xea\x76\x43\x38\x13\x4a\x68\x7b\x30\xc1\x48\x72\xb6\x12\x4e\x78\x0e\x1c\xde\x81\x7a\x8b\x50\x1d\x2a\xe2\x99\x32\xa9\x7b\x84\x33\x59\x19\xe3\xfc\xe6\xea\xeb\xcf\x2f\x1f\xeb\xad\xeb\x1f\x1f\x2a\x4a\x38\x8e\xc6\x6c\xaa\x23\xe1\x2c\x57\x00\xcf\x3c\xd8\x6e\x30\x42\xde\x08\xff\x3f\x6b\x6f\x37\x7a\xc2\x59\x02\x4e\x52\x84\x52\x72\xa3\x79\x5f\x72\xa3\xb9\x4a\xbe\x67\xb9\xde\xea\x71\x51\xe6\xcf\x10\xd2\xf6\xc0\x47\xee\xb4\xc3\x14\x97\x27\xa3\xf5\xbf\x3c\x88\xc2\x09\x83\x95\xba\x4e\x5c\x23\x8d\x07\x03\xa3\x88\x0d\xb0\x26\x36\x68\xc4\xa2\x88\x54\x22\xdf\x9c\x6b\x55\xc8\xa2\x60\x3f\x62\xf3\xc8\x54\x07\x96\x7c\x05\x92\x43\x38\x2c\x02\x0b\xe1\xd0\x3a\x4d\x92\x1c\x74\xba\xff\xbd\xf4\x87\xe4\x2e\xda\x54\x85\x52\x71\x65\x87\x3b\x8c\x87\x48\xb3\x59\xdf\xd0\x78\xbb\x1d\x5b\x89\x87\xb4\x14\x58\x62\x4a\x08\x3d\x25\x9c\xbc\xba\x07\x97\xfe\x18\xa5\x69\xa2\xca\xc2\xa7\x3a\x50\xe5\x22\x6e\x87\x72\x79\xd4\x34\xef\xba\x0a\x94\xf5\xd0\xcc\x7b\x68\x66\x5e\x1f\xb3\x44\xc2\xba\x5f\x87\x78\x8e\x1a\x08\x48\xf2\x6f\x16\x88\x46\xd4\x18\xc4\xaf\x50\x4b\xf5\x3f\x60\x59\xae\xbb\x56\x44\x57\xda\x63\x41\x26\x2c\xf4\x24\x41\x97\xf2\x41\xe6\x6c\xbf\x8f\x33\x67\x44\xba\xc3\x9a\x9d\x73\x33\x73\xac\x63\x9e\xc5\x30\x66\xfe\x42\xf0\xd3\xa8\x24\xf9\x53\xfc\xd4\xcd\x34\xb3\x59\x5c\x04\x39\xd7\x79\x60\x51\xd6\xd9\xdc\x52\xee\xb1\x3f\x3b\x3d\x7e\xb1\x6f\xef\x2e\x97\x3f\xf0\x24\xee\xf2\x16\x99\xb8\xb9\x57\xed\x25\xc1\x66\x78\x8a\xd0\xd4\xcc\x7a\xfd\x52\x77\xeb\x5a\xf7\x0b\x23\xd9\x23\x7a\x7f\x7b\x7b\x48\xed\xd9\xe6\x56\xe4\x3d\x78\x72\xfb\x05\xb5\x6d\xe2\x36\x37\x62\xff\x89\xdb\x8d\xbe\xa6\x6b\xd9\x7f\x4c\x8a\x5b\x47\xd5\x18\xea\x04\x5f\x67\x85\xc3\x6f\xdd\xe3\xca\x86\xf9\x72\x36\x7b\x78\xf4\x22\x67\xcb\x58\xa9\x80\x51\x7f\x17\x6b\xbc\x83\xa1\x69\x07\x3d\x51\xee\x31\x26\xe8\xe7\x4a\x2d\x58\x2e\x8b\xaa\x96\x55\xc8\x3f\xf3\xee\xc1\x4f\x12\x8c\x86\x25\x74\xce\xa1\x0f\xd7\x75\xd5\xc6\xe1\x56\xb6\x8c\x75\x38\xda\xf3\x33\x7f\x75\x96\x87\x69\xb6\xe1\x2c\x4f\x30\x1a\x65\x17\xf9\x5b\x92\xef\xb4\xcf\x89\x59\xdb\xf1\xe0\xdf\x0d\x0f\xca\xf5\xf7\x77\xbf\x3e\x5f\xdd\x7c\x7b\xfb\xfb\xd3\xfb\xfa\xfa\x7b\x32\x8d\x4a\xdc\x85\x51\x56\xa0\x9f\x19\xe0\xad\x7a\x6f\xbd\xce\x6a\xcb\xe3\xf5\xd6\xcb\xd1\x8c\x1e\x14\x35\xda\xd2\xc2\x6e\xad\x50\x55\xaf\x64\x91\x3f\x01\x00\x00\xff\xff\xb4\x35\xad\x03\x58\x08\x00\x00")

func libsAesGoBytes() ([]byte, error) {
	return bindataRead(
		_libsAesGo,
		"libs/aes.go",
	)
}

func libsAesGo() (*asset, error) {
	bytes, err := libsAesGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "libs/aes.go", size: 2136, mode: os.FileMode(420), modTime: time.Unix(1596776922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _libsControllerGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x51\xbb\x8e\x13\x3d\x18\xad\xfd\x3d\xc5\xd1\x14\xbf\x66\xa2\xec\x64\x23\xfd\xa2\x88\x48\xb3\x5b\x20\x24\x58\x02\xfb\x00\xc4\x99\x38\xb3\x66\x67\x6c\xcb\x63\x43\x56\xa3\x69\x28\x80\x8a\x2d\xb8\xf4\x74\x94\x34\x08\x89\x82\xb7\x09\x2c\x6f\x81\x3c\x56\x20\x23\x41\x67\x9d\xcb\x77\xce\x91\x0d\x2f\x2e\x79\x29\x50\xc9\x55\x43\x24\x6b\xa3\xad\x43\x4a\x2c\x69\xdb\xfc\xbe\x5e\xfb\x4a\x9c\xf1\x5a\x74\xdd\xa4\xac\xf4\x8a\x57\x09\xb1\xa4\x94\xee\xc2\xaf\xf2\x42\xd7\x93\x52\xaa\xa3\x52\x2b\x59\x84\x57\x42\x19\xd1\x64\x72\xc2\x1b\x71\xaa\x95\xb3\xba\xaa\x84\x25\x77\x65\x04\x86\x18\x1a\x67\x7d\xe1\xd0\x52\x17\x0c\x0f\xbc\x33\xde\xe1\xe6\xdb\x9b\xdd\xcb\xaf\x4f\x1a\xad\x7e\xbc\xfd\x48\x1b\xaf\x0a\xa4\x05\x46\x43\x6b\x86\xa8\x4e\x0b\xb7\xc5\xa8\x94\x2a\x0f\x9c\xd8\xba\x0c\xa3\x47\xa2\x31\x68\x89\x59\xe1\xbc\x55\x38\x13\xcf\x02\x12\x94\x63\xc4\xf6\xf9\xf9\xa9\x56\x9b\xfc\x6e\xb3\xb0\x7a\x9d\xc5\xf4\x05\x2f\xc5\x82\x5b\x5e\x37\xd8\xbd\x7a\xf1\xf3\xc3\xe7\xdd\xf5\xf3\xef\xef\x3e\xc5\xde\x07\xe4\xef\xce\x2c\x80\x80\x54\xee\xd6\xff\x58\x6e\xb4\xad\x67\x89\xe1\xa5\x48\x96\xc4\xee\xc9\x5a\xba\x21\x55\x05\x28\x59\xc6\xb0\x3b\xc2\x1d\x9c\xbc\x79\xfd\x65\x77\xfd\x7e\x90\xfa\xcf\xd9\x03\xe7\x5f\xd6\xa7\xa1\xc2\x18\xcd\xa5\x34\x63\x54\x7f\x6a\x64\xa1\xf1\x53\x6e\x61\x0c\xe6\x07\x7b\x5a\x62\xfd\x90\x19\x70\x3c\x26\x16\x9b\xcf\xfa\x77\x47\xec\x31\xe6\x28\xdc\x36\x3f\xbf\xd0\xbe\x5a\x9f\x48\xb5\x7e\xe8\x85\xbd\x4a\xff\x33\x26\x23\x16\xa2\x30\x87\x31\x79\xb8\x40\x4c\x6e\xd0\x43\xb7\x31\x0d\x69\x7b\x7e\xda\x9f\x8a\x5d\x7a\x75\x9f\xd1\xcb\x23\xb8\xd7\xef\x25\xd3\xe3\xde\x11\x36\x60\x1e\x17\xe1\x08\xd3\x0c\xa3\x68\xd8\x7f\x2d\x75\xf4\x2b\x00\x00\xff\xff\x84\x12\xc1\xc0\xb7\x02\x00\x00")

func libsControllerGoBytes() ([]byte, error) {
	return bindataRead(
		_libsControllerGo,
		"libs/controller.go",
	)
}

func libsControllerGo() (*asset, error) {
	bytes, err := libsControllerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "libs/controller.go", size: 695, mode: os.FileMode(420), modTime: time.Unix(1605338649, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _libsMongoGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\xcf\x6f\x1c\x35\x14\x3e\xdb\x7f\x85\x19\x09\xc9\x13\x2d\xde\xc2\x71\xd1\x1e\x48\xd3\x40\x0e\xfd\x21\x42\xc5\x01\x71\xf0\x78\xde\x4c\xac\xce\xd8\x2b\x8f\x27\x5d\x11\xad\xc4\x05\x15\xa9\xa5\x5c\xaa\x4a\x20\x7e\x1c\x00\x81\x38\x94\x63\xa5\x4a\xa5\xff\x4c\x77\xd3\xfe\x17\xc8\x3f\x66\x32\x9b\x26\x84\x08\xa9\x70\xc8\x9e\xc6\xcf\xcf\xcf\xdf\xfb\xbe\xcf\x6f\x67\x5c\xdc\xe2\x25\x90\x4a\x66\x0d\xc6\xb2\x9e\x69\x63\x09\xc5\x28\x11\x5a\x59\x98\xdb\x04\xa3\x04\x8c\xd1\xa6\x71\x5f\x45\xed\x02\x95\x2e\x49\x52\x4a\xbb\xd7\x66\x4c\xe8\x7a\xdc\x48\xd3\xce\x1a\x50\xe3\x4a\x97\xa6\xf5\x89\xa5\x66\xb5\x56\xa5\xce\x33\xa6\x4d\x39\xf6\xdf\x6f\xe5\x46\xee\x83\x09\x8b\x7f\x94\x34\xd6\x33\x2b\xb5\xf2\x15\xad\xac\x21\xc1\x29\xc6\xfb\xdc\x38\x80\x3e\xe1\x72\x25\x41\xd9\xeb\x33\xdb\x90\x8d\x98\xcb\xfa\x98\x5b\x61\x94\x43\xc1\xdb\xca\x6e\x6d\x92\xf0\x6b\xac\x91\xaa\x74\x85\x8a\x56\x09\xb2\xa3\xa4\xbd\xea\x4a\x6d\x6d\xd2\x3d\xdd\xd8\x86\x7c\xf2\x69\x48\x19\x91\xb6\x01\x33\x22\x33\xde\x34\xb7\xb5\xc9\x49\x17\xce\xb9\xe5\x19\x6f\x20\x06\x52\x72\xe0\x29\x61\x3b\xaa\xd0\x34\x59\x7e\xf9\xfd\xf2\xd7\xbb\xcb\x7b\x0f\x7d\xd5\x97\x5f\x7c\x75\xf8\xf4\x51\x92\x0e\x71\x4c\xfb\x0a\x18\x69\x07\x7d\x32\x25\xeb\xe0\x69\x1a\x76\xd8\x2e\xd8\x0f\x1c\xa8\x00\x6d\x10\x7d\xaf\xb5\x7b\xb4\x3f\x64\x20\x07\x65\x25\xaf\x0e\x30\x42\x37\x1b\x30\x8a\xd7\x30\x09\xf8\x31\x42\x37\x62\x07\x93\xbe\x97\x11\x46\x8b\x41\xb5\xab\x7c\x7e\x43\xeb\x6a\x57\x7e\x06\xf4\x9d\x4b\xe9\xab\xe4\x7a\x80\x0d\x5e\x44\xd2\xde\x07\x7b\x39\xd8\x83\xa6\x84\x0a\x3b\x27\xd1\x2d\x2c\x86\x47\x44\x70\x25\xa0\x3a\x8a\xfb\xe5\x76\xab\x84\xa7\x4b\xd8\x79\x9f\x32\xed\x93\x3e\x96\x76\xef\x23\x59\x83\x6e\x2d\xed\x62\x9b\x5c\xdc\x2a\x8d\x6e\x55\x4e\xd3\x11\x79\xfb\xd2\x86\xf3\x01\xdb\x05\xa1\x55\x9e\x62\x64\xc0\xb6\x46\x39\x60\xe3\xb1\x83\x15\xa5\x24\xcf\x9f\x3e\x3b\x7c\xf0\x1b\x19\x5a\x8a\xbc\xb8\xff\x78\xf9\xf5\xc3\xc3\x9f\x9f\x3c\xff\xf3\x6e\xdf\x47\xa7\x7d\x4a\x68\x9e\x91\x0d\x7f\x80\x6d\x45\x7d\x46\x04\x8c\x21\xde\xfe\x1e\x76\xa7\xd6\x31\x7a\x30\x12\xfe\x3b\xa4\x77\xfb\xec\x1a\xdc\x8e\x72\xba\x73\x29\x46\xb2\xf0\x09\x6f\x4c\x89\x92\x95\xab\xe7\x6d\xb3\xcd\x2d\xaf\x68\xf2\xe2\x8f\xc7\xab\x9f\x3e\x5f\xfd\xf8\x4b\x7c\x12\xd1\x39\xbe\x66\x8a\xd1\x02\xaf\xb3\x36\x99\xae\xa9\xe0\xfd\x05\x26\xee\xd2\x14\x63\xe4\xae\x9a\x92\x80\xcc\xe9\xa2\x40\x58\xa7\xd5\x99\x40\x9e\xfd\xb0\xba\xdf\xa1\x58\xde\x79\xf2\xf2\xc1\x37\x3d\x8a\x8e\x6f\xb4\xc0\x28\xcf\x8e\xca\x77\x84\xd1\xde\xe5\x6b\xda\x78\xb2\x3d\xd3\x57\xe6\x20\x68\x41\x5c\xe0\x64\xdf\xbc\x2a\x42\x4a\xe8\x91\x0a\x6b\x0b\x87\x3c\xb4\xed\xeb\xf9\xb5\xef\xcd\xb1\x63\x40\xe8\x7d\x30\x34\x7d\x97\xc0\xb0\x53\xdf\xea\x15\x77\x9e\x26\xfe\x22\x32\xe3\x4a\x8a\x09\x71\x4d\xba\x16\x23\x71\x45\x6d\x43\x5a\x41\x93\x37\xf7\xbb\xcd\x05\x46\x0b\xcf\x6e\x9e\xf5\x6a\x0f\x5d\x74\x12\xb7\x03\xce\xce\xa3\x60\x5c\xe7\x59\x3f\x14\xd8\x96\x6c\xc4\x50\x48\x8c\xc6\x63\x02\x73\x10\x9d\xda\x05\xf5\x37\xe4\xd9\x29\xf4\x6f\x4b\x95\x5f\x57\x40\x85\xae\x2a\x10\x6e\x7a\x5c\xe3\x35\xf4\x93\xad\x90\x95\x05\x43\xa4\xb2\x60\x0a\x2e\xe0\x60\x31\xf2\x0f\x9f\x30\xc6\xfa\xf9\x1a\x6b\xc4\x01\x9b\x12\x6a\xa0\x69\x2b\xdb\xc9\xb6\x2b\x55\x59\xc1\x87\x3e\x76\xfc\xfd\xfc\x37\x62\xb9\x5b\x8e\x35\x3c\x9d\x92\x24\xf1\x37\x84\xf3\xe1\x1f\xce\xbd\x58\x9a\xac\xbe\xfb\x7d\x75\xef\xce\xf2\xd1\xb7\xeb\x67\x92\x75\xfb\xff\x9f\x1c\x50\x04\x45\x30\x72\x88\x5d\x55\x77\xa2\x07\x7f\x4c\x6c\xef\x0c\x2f\xd8\xd4\xb3\xc2\x7a\x4f\x38\x64\xc1\x01\x41\x75\xc6\xd8\x29\x36\xda\x51\x0d\x18\xfb\x37\x46\xca\xb5\x38\xc3\x45\x7d\x89\xd3\x7c\xd4\x27\x5c\x58\xe9\x35\x5a\x49\x7a\xd6\xcf\xe9\xa4\x00\x3e\xda\x69\xe0\x0d\x3f\x8a\xb4\x38\xcb\x4d\x37\x67\x39\xb7\x70\xce\xb1\xd4\xfa\x43\x67\x98\x2c\x56\x3e\xc5\x61\x61\xf7\xc2\x5e\xaf\xd1\x5e\x41\xb5\x7f\x63\xaf\x81\x59\x86\xf3\x2a\x14\x3e\xd1\x69\x7f\x05\x00\x00\xff\xff\x08\xbb\x50\xe7\xe2\x0c\x00\x00")

func libsMongoGoBytes() ([]byte, error) {
	return bindataRead(
		_libsMongoGo,
		"libs/mongo.go",
	)
}

func libsMongoGo() (*asset, error) {
	bytes, err := libsMongoGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "libs/mongo.go", size: 3298, mode: os.FileMode(420), modTime: time.Unix(1596776922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _libsRedisGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\xcd\x6e\xdb\x46\x10\x3e\xef\x3e\xc5\x84\x87\x80\x4c\x58\xaa\x48\x7b\x28\xd4\xea\xd0\x58\x82\x21\x20\x4e\x8d\xca\x45\x02\x04\x81\xb1\x22\x47\xe2\xd6\xd4\xae\xb0\x5c\xca\x16\x04\xdd\x0b\xb4\xe8\xb1\xb7\x16\xbd\x14\x3d\xf7\x09\xfa\x34\x0e\xfa\x18\xc5\xec\xf2\x57\x89\x83\x1e\x2a\xc0\x16\xf9\x71\x76\xf6\xfb\xbe\x99\x1d\x6a\x2b\xd2\x1b\xb1\x46\x28\xe4\xb2\xe4\x5c\x6e\xb6\xda\x58\x08\x39\x0b\x50\xa5\x3a\x93\x6a\x3d\xfa\xbe\xd4\x2a\xe0\x2c\x58\x4b\x9b\x57\xcb\x24\xd5\x9b\xd1\x5a\x98\xfd\xb2\x32\xd9\xc8\x60\x26\xd7\xda\x7d\x95\x01\x67\x85\x5e\x43\x3f\xae\x94\xa6\xda\x96\xa8\x46\x85\x5e\x9b\x8a\x22\x02\x2b\x37\x18\xf0\x88\xf3\x9d\x30\xb4\xcf\xb7\xb4\xf4\x52\xeb\x02\x9e\xb8\x2c\x09\x5d\x73\xe6\xae\xcf\xb4\x5a\x41\x7b\x25\xd7\xb4\xcc\xee\xb7\xd8\xc7\xa0\xb4\xa6\x4a\x2d\x1c\x38\xcb\x75\x69\xc1\x7d\x4a\x6b\xa4\x5a\x73\xe6\xc4\x0c\x11\x51\x96\xb7\xda\x64\x1d\x92\x09\x2b\x96\xa2\x44\x00\xa9\x2c\x67\x1b\x71\x37\xcf\x0a\x84\xee\xf6\xeb\xd4\xca\x1d\xba\xdb\x23\xe7\xab\x4a\xa5\x30\x57\xd2\xb6\xc4\x43\xda\x37\x06\xda\x2b\x86\x36\xbf\x4f\x1f\x43\x93\x3e\x86\x3a\xb3\xbb\xe8\x72\x46\xc4\xbc\xd0\xeb\x64\xae\x56\x3a\x0c\xee\x7f\xf8\xf5\xfe\xcf\x1f\xef\x7f\xfa\xc5\x49\xfc\xe7\xef\xdf\xde\xfd\xfc\xc7\xbb\xbf\x7e\x0f\xa2\xbe\x25\x93\xbe\x01\x07\xce\x9c\xf2\xb1\x17\xea\xc8\x70\xe6\xa4\xd7\x90\x63\x46\x50\xcd\x6d\x0c\x2d\x4d\x82\x1b\x86\x63\xe8\xc8\x72\xd6\x18\x41\x39\x1a\xe6\x1e\xf5\xdc\xc7\x9d\x8c\x98\xb3\x23\x67\x22\xcb\x0c\x96\x25\x8c\x7b\xec\x12\x57\x92\xa7\x10\x8c\x03\x78\xda\x83\x89\x11\x67\x7a\x6b\x2f\x1b\xbb\x9a\x55\xc9\x54\x8a\xa2\x41\xc3\xde\x8a\x1a\x8a\xdc\xb2\x69\x53\xb3\xc1\xb2\x06\xed\x2d\x6b\x04\x45\xfd\x46\x9b\xc0\xe3\xae\xd5\xc8\xbe\x8b\x4e\x2a\xf4\x58\xf6\x64\x5f\x74\xb2\x4f\x22\x5a\x0b\x18\xc5\x5e\xc9\x0d\xea\xca\x8e\xe1\xd9\xe7\x9f\xc2\x13\xa0\x66\x4f\x16\x98\x6a\xe5\x9c\x7e\x25\x64\x53\x13\x00\x6b\x2a\xb7\x6c\x34\x02\x22\x0f\xda\xb8\xef\x33\xad\x2c\xde\x59\xd8\x54\xa5\x85\x25\x42\x89\x36\x81\x57\x39\x2a\x58\x6a\x9b\x83\x30\x0e\x8a\x07\xb1\x56\xdc\x60\x09\x5b\x83\x29\x66\xa8\x52\x04\xbd\x43\x9f\x2d\xe1\x8c\xd1\xf7\x18\xa8\x6f\xc3\x08\xc2\xb4\x36\xec\x4c\x2b\x15\x03\x1a\x43\x7f\xda\x50\x1b\x72\xc6\x58\xea\xb1\xbe\xad\x61\x60\xd3\x6d\x10\x43\x5d\xe0\x18\x7a\x05\x70\x37\x97\x5d\x6d\x18\x93\x2b\x97\xe0\xd1\x04\x94\x2c\xa8\xb7\x99\x93\x98\x0b\x45\xa7\xca\xed\xe5\x30\x6a\xf9\x19\xdd\x85\x81\xdb\x6a\x1c\xb8\x9d\x5d\x8e\x23\xfd\x33\x68\x2b\xa3\x88\xd4\xb1\xb6\x29\xcd\x31\xbd\x01\x9b\x23\xe4\x28\x0a\x9b\x83\x5e\x81\x50\x20\x29\x71\xaa\x95\xc2\xd4\x4a\xad\x60\x89\x2b\x6d\xd0\xc5\xf5\x50\x59\x82\xcf\x88\x19\x58\xed\x9e\x8a\xed\xb6\x90\xa9\xa0\xc7\x9c\xb1\x2b\x2c\xed\x37\xea\xb9\x36\x46\xdf\xd6\x76\x0d\xbd\xb2\xbe\x9c\x54\xe2\xc8\x0b\xf1\xf2\xe4\xaa\xae\xb3\x54\x29\x86\x36\x82\xaf\xfc\xfd\x85\x54\x95\xc5\xda\x02\xbf\x37\x79\xd2\x0a\xbc\xf6\x56\x8f\x27\x90\x26\x53\x1d\x06\x97\xf3\x97\xe7\x41\xd4\x49\xa7\xa7\xb5\xfa\x63\x3b\x79\xce\xd1\x0f\x1e\xa2\xe4\xca\xa9\x95\xea\xb1\x74\xd3\xc4\x61\x13\x68\x1b\x3e\x39\x47\x1b\xba\x01\xe2\x1c\xfd\x50\xaa\xe9\xf3\xb0\x9d\x83\x6e\x28\x9d\x26\x3e\x69\x95\x66\x8f\x21\x1d\x4e\x5e\xb4\x79\x1e\xf5\x07\x41\x8b\x92\x1d\xd7\x4d\x93\x51\x16\xa7\x7d\x31\x7b\x31\x3b\xbb\x0a\xba\x71\x19\xb9\x99\xd2\x31\x1e\x8d\xe0\x93\xff\xe9\x43\xc9\x2e\xf6\x9e\xb6\x48\x73\xf4\xaf\x94\xee\xbe\x7b\xa3\xb8\x7d\x5f\xe2\x6d\x2f\xd6\x39\x37\x80\xc2\x08\x9e\xf4\x16\x1f\x1a\xd6\xf0\xb8\x43\x0f\x47\x9f\xeb\x1c\x6d\xdd\x85\x90\x12\x9e\xc1\x4e\x14\x55\x9d\x35\xdc\xe0\xa6\x9f\x2a\x22\x77\xc3\x1b\xdc\xd7\xef\x92\x08\xc2\x9d\x28\xa8\x3c\x68\x56\x22\xc5\xc3\xb1\xab\xc4\xf8\xfd\x52\x5c\x2f\xf7\x16\xcb\x18\xae\x5d\x87\x35\x46\x9f\xcf\xc8\xe5\x1b\xdc\xfb\x62\xf9\x20\x98\x74\xa7\xb5\x41\xe0\xcd\xdb\x4a\x2a\xfb\xc5\xe1\xe8\x2a\x71\x0d\x13\xa0\x1f\x02\xc9\x77\x6a\x23\x4c\x99\x8b\x22\xf4\x91\x49\xf8\xe6\x2d\x5d\x44\x31\x3c\xde\x89\x22\x1a\x16\x6d\x5e\xce\xee\x64\x69\x1f\x12\x58\x3f\x1e\x8a\x44\x82\x60\xa9\x75\xf1\x51\x7d\x2e\x8c\xe4\x35\xb3\xea\x39\xbd\x8b\x5b\xa1\xb3\xd7\xf3\xc5\xd5\xa2\xd6\x7a\xc2\x6a\x81\x76\xe0\x3f\xdc\x4a\x9b\x53\x20\x08\x95\x01\xde\x6d\x25\xcd\x0f\x3a\xc3\x0f\x11\x5f\x0c\x2a\x13\xc3\x49\x61\x62\xb7\x5a\x57\xf5\xc8\x98\x56\xc6\x4d\x19\x12\x37\x38\x45\xf4\x1b\x88\x3a\x1e\xbc\x87\xed\xf9\x69\xce\x87\x73\xfc\xa2\xf6\x9b\xdc\xfd\xf2\x74\xb8\xf6\x47\xc5\xf1\x23\xcd\xf0\x81\x13\x77\x35\x7b\xed\xed\x89\x89\xfa\x67\xcf\xc2\x9a\xf3\xa8\xf7\xd6\x8a\xfc\x89\x3c\xf1\x6f\x8a\xc5\x43\xc6\x4c\xb1\x40\x8b\x27\x05\x7d\x7f\x72\xfc\x27\x8a\xd3\xd9\x8b\xb6\x57\xdb\xed\xff\x0d\x00\x00\xff\xff\x57\x12\xc8\x6c\xb0\x0a\x00\x00")

func libsRedisGoBytes() ([]byte, error) {
	return bindataRead(
		_libsRedisGo,
		"libs/redis.go",
	)
}

func libsRedisGo() (*asset, error) {
	bytes, err := libsRedisGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "libs/redis.go", size: 2736, mode: os.FileMode(420), modTime: time.Unix(1596776922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _libsRespGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xcd\x6a\xeb\x46\x14\x5e\xcf\x3c\xc5\xa9\x17\x41\x0a\xaa\x6d\x42\xe8\xc2\xa0\x4d\x93\x2c\xda\xe2\xb8\x24\x2f\x10\x5b\x96\x65\x35\xb1\xe4\x6a\xc6\x34\x21\x18\x6a\x48\x49\x1b\x08\x29\x24\x2d\xad\xe9\x4f\x0c\xa1\x2d\x2d\x38\xe5\x2e\xee\xf5\x75\x72\x93\x97\x91\x25\xe7\x2d\x2e\x67\x66\x6c\xcb\xb2\x0d\x57\x2b\xcd\xcc\x99\xf3\x7d\xdf\x9c\xef\x9c\x66\xd9\x3a\x2c\x3b\x36\x1c\xb9\x15\x46\xa9\xdb\x68\xfa\x01\x07\x8d\x92\x8c\xe3\xf2\x7a\xab\x92\xb5\xfc\x46\xce\x71\xbd\x8f\x1d\xdf\x73\x2d\xfc\xcb\x50\x92\xf1\x6c\x9e\xab\x73\xde\xcc\x50\x9d\x52\x7e\xd2\xb4\x61\xcf\x66\x4d\x60\x3c\x68\x59\x1c\x4e\x29\x61\xbc\xcc\x5b\x6c\xcb\xaf\xda\xe0\x7a\x9c\x12\x3b\x08\xc4\x02\x00\xd7\x9f\x6c\x52\xd2\x60\x0e\xa8\xcf\xf5\xb8\x1d\xd4\xca\x96\x7d\xda\xa6\xa4\x5a\xe6\xe5\xa5\xfb\x76\xa5\xe5\x2c\xee\x53\x62\xf1\x63\xdc\x5c\x77\x5c\x2f\xbb\xe5\x7b\xdc\x3e\xe6\x94\xb8\xec\xcb\xc0\xaf\x42\xc5\xf7\x8f\x68\x9b\x52\xcb\xf7\x98\x50\xb5\x23\x79\x94\x0e\xc1\x84\x3c\xe4\x72\x10\xbd\xea\x45\xbf\xfd\xf0\x72\xf3\xeb\xf8\xfe\x1e\xc5\xd4\x5a\x9e\x05\xbb\xf6\x37\xa8\x47\xc3\xd4\xc9\xbc\x06\x24\xf2\xea\xa0\x05\xb0\x8e\x71\x3a\x2a\x0e\xc0\x84\x35\x5c\x9d\x52\x92\x90\x5f\x00\x7c\xa7\xec\xbe\xd8\x28\x7d\x61\x50\x32\x79\x8b\x02\xb2\x9e\xf2\x31\x28\x69\x53\x12\x64\x15\x80\xa9\x90\x70\x0b\x59\x98\x60\xf1\x63\x4a\x02\x9b\xb7\x02\x0f\x02\xd4\x94\xcb\xc1\xfe\xec\x95\xc7\xfd\xa7\xf8\x5d\x7f\x74\x7d\x39\x1a\xde\xc4\xdd\x33\x04\x8d\x2f\x5e\x47\xdf\x76\xe2\xdb\x8e\x14\x35\x63\x3b\xbb\xa6\x59\xaa\x42\xba\x3c\x13\x42\xb2\x89\xe2\x99\x80\x11\x0b\xc0\x8a\xb6\x42\x0d\x07\xdd\xd1\x45\x6f\x7c\xfe\xef\xa8\xdf\x0d\xdf\xaa\xc7\x8c\x6f\x3b\xc6\xcb\xc3\x2f\xe3\xfe\x5d\x38\x18\xe6\xd3\x14\x54\x02\x6d\xe2\x0b\x61\x8a\x39\x12\x93\x13\x13\xd4\xdf\x02\x89\x6d\x74\x4a\x4a\x77\x38\x78\x18\xff\xd5\x89\x7e\xfa\x3f\xba\xec\xa3\x93\xd2\xb8\x78\x47\x13\x16\x4b\x98\x68\x0e\x57\x1c\x9a\x20\x2e\xa7\x11\x8b\xcc\x49\x03\x46\x57\x3f\xc6\x77\xc3\xf0\xb9\x17\x75\xee\xa3\xef\x7f\x96\xda\xe5\x32\x8d\x5d\x64\x8e\x86\xae\x5f\x85\x8c\x67\x26\x34\x98\xb3\xa8\x54\x78\x3f\x85\x2c\x1a\x42\x22\x19\xe1\xc3\x77\x2f\xbf\xff\x11\xdf\xfc\x19\x0e\xff\x8e\xfe\xe9\x8d\x1e\xaf\xc2\xc7\xee\xf8\xe9\x7a\x74\x3e\x5c\x78\x01\xbc\xa6\x89\xcb\x9f\x79\x35\x7f\x05\x1b\xb7\x06\x53\x2f\xa2\xa1\xa7\x84\xa4\x4b\x65\x33\x9a\x30\x4d\xb3\xe8\x10\xab\xee\x83\x64\x20\x19\x2f\x38\xc0\xaa\xfb\x9a\xe8\x1c\xf4\x77\xc1\x04\x61\x74\xb1\x52\xdd\xa2\x25\x9d\xa8\x53\x45\x2a\x61\xce\x8f\xcc\xf9\xe6\x82\xb5\x35\xa4\xba\x3a\xe4\xd3\x72\x75\xcf\xfe\xba\x65\x33\x9e\x10\x85\x92\x28\x61\x48\x61\x36\xbf\x26\x83\x42\x1a\x53\xcd\xa3\x83\xaf\x98\xef\x15\x32\xca\x8f\x99\x03\x4a\xc8\xb6\x9a\x56\x89\x57\x9c\x84\xa1\x83\x0c\xbf\xe1\x72\xbb\xd1\xe4\x27\x22\xba\xa8\x66\xde\x92\xe8\x06\x73\x52\xc1\xdb\x6a\xe0\x2d\x4b\x8d\x47\xf3\xe1\xed\x04\xe9\x02\x4c\xdb\xc7\x50\x1c\xc5\xb0\x91\xe6\x36\x24\x11\xb1\x03\xc2\x75\xc6\x04\xad\x20\x83\x44\x76\x51\x69\x2c\xc6\xe7\xfb\xa5\xdd\xb9\x52\x18\xc0\x74\x55\xe5\x8d\x7c\x1e\xa6\x63\x26\x1c\x0c\x37\xf2\xf9\xb8\x7b\x26\x8b\x3f\x7a\xfe\x2f\xba\x7c\xb3\xdc\x84\xa5\x43\x59\xfa\x20\x9b\x98\x45\x73\xb5\xd4\xb3\xd2\x20\x0a\x68\x33\x05\xb4\xf9\x81\x40\x3b\x41\x80\x33\xa6\x98\x6e\x3b\x81\x8d\x0d\x29\x0f\xf5\x15\x3c\x66\x86\x49\xf0\x79\x1f\x00\x00\xff\xff\xbe\xdd\xd3\x04\x32\x07\x00\x00")

func libsRespGoBytes() ([]byte, error) {
	return bindataRead(
		_libsRespGo,
		"libs/resp.go",
	)
}

func libsRespGo() (*asset, error) {
	bytes, err := libsRespGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "libs/resp.go", size: 1842, mode: os.FileMode(420), modTime: time.Unix(1596776922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x41\x6b\x14\x31\x14\xc7\xcf\xc9\xa7\x78\xe6\xa0\xb3\xb4\x9d\xf1\x5c\xe8\x49\x29\x54\x6c\x2d\xbb\xfd\x02\xe9\xcc\xdb\x4c\x30\x93\x37\x24\x99\x5d\x97\x65\xc1\x4b\x41\x6a\x0b\x22\xa2\x17\x3d\x08\x8a\xbd\xa8\x14\x8a\x08\x52\xfc\x32\x1d\x6b\xbf\x85\x64\xa6\x68\x0b\x2a\x73\xc9\xe4\xff\xfe\xff\x97\xf7\x7b\xb5\xcc\x1f\x4a\x85\x50\x49\x6d\x39\xd7\x55\x4d\x2e\x40\xc2\x99\x50\x3a\x94\xcd\x6e\x9a\x53\x95\x29\x6d\x57\x14\x59\x9d\xc7\x93\xe0\xcc\x90\x82\xab\xba\xd7\xae\xa9\x3d\xda\xcc\x90\x72\x8d\x17\x9c\x33\x31\x9f\xa7\x9b\x54\x34\x06\xb7\x64\x85\x8b\x45\xa6\x0c\xed\x4a\x23\xfe\xa2\x4c\xa7\x53\xc1\x07\x9c\x8f\x1b\x9b\x77\xcf\x48\x06\x30\xe7\x4c\x8f\xa1\xf7\xa4\xa3\x3b\x64\xc7\xe9\x86\xdf\x76\x54\x44\x85\x29\x6d\xd3\x11\x86\x4d\x2a\x30\x89\xe7\x21\x1a\x94\x1e\xe3\xff\x80\xb3\x05\xe7\x2c\xcb\xe0\x2e\x8e\x65\x63\x02\x9c\x9d\x7e\x3f\x7f\x71\x04\xf7\x49\x29\x74\xd0\x3e\x3f\x80\x21\xe6\x34\x41\x37\x83\xb3\xaf\x1f\x2f\x5e\x9d\x9c\x7d\xfb\xc2\x99\xac\x6b\x58\x5d\x83\x98\x76\x69\x4c\x06\x9c\x4d\xa7\xd3\x74\x88\x4a\xfb\x80\x6e\x48\x4d\x40\x9f\xc8\xba\x1e\xf4\x0d\xda\x67\x9f\xdb\xfd\xa3\x1f\xaf\x0f\xdb\xfd\xb7\x9c\x95\xe4\x43\x4c\x10\xb7\xd3\xee\x13\x9c\x75\x28\x63\xe8\xd5\x31\xb6\xc9\x05\xce\x64\x51\xb8\x28\x75\xae\x25\x10\xab\x02\x96\xa0\xee\x24\x74\x9d\x22\xeb\x3a\x1d\x36\x36\x89\x95\x83\x8e\x46\x14\x6e\xac\x81\xd5\xa6\x83\x60\x48\xa5\xeb\x32\x48\x93\x88\xfe\x25\xed\xbb\xe3\x9f\x27\xef\x57\xc5\x72\xac\xec\x38\x2c\x2e\xa1\x6a\xab\x43\x0f\x35\xcb\xa0\x20\xf0\x54\x61\x28\xb5\x55\x50\xa2\x43\x08\x04\x1e\x03\xa0\x9d\x68\x47\xb6\x42\x1b\xa0\xc0\x1a\x6d\x11\x2b\xc8\x82\xb4\xd7\xb4\x89\x74\x5a\xee\x1a\xec\xd2\xc8\x41\x4e\x55\x25\x6d\xb1\x62\xb4\x45\x18\x1b\xa9\x7a\x3a\x4f\xde\xb4\x1f\x9e\xb6\x07\x2f\xdb\xbd\xa3\xf6\xf8\xf1\xc5\xde\xe1\xf9\xe9\x27\xce\x2e\x59\x6c\x58\x1d\x22\x0e\xad\x12\x91\x66\x79\x04\x33\xab\x8c\x18\xfc\x77\xed\x71\xe2\x11\x86\x75\x72\x95\x0c\x01\x5d\x72\x33\xde\xdc\x1b\x3d\xd8\xfa\x7d\x35\x5f\xc4\xc1\x01\x8d\xc7\xce\x92\x65\xb0\x53\x22\xec\xe0\xa3\x3f\x36\xd0\x1e\x8a\x7e\xc7\xcb\x30\xa3\x06\x0a\xb2\xb7\x02\xc8\x3c\x34\xd2\x98\x19\x94\x72\xd2\x31\x29\x08\x42\xa9\x7d\xfa\xcf\xce\xd7\x52\xfb\xce\x7c\xc1\x7f\x05\x00\x00\xff\xff\xfb\x2d\xd9\x03\x51\x03\x00\x00")

func mainGoBytes() ([]byte, error) {
	return bindataRead(
		_mainGo,
		"main.go",
	)
}

func mainGo() (*asset, error) {
	bytes, err := mainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "main.go", size: 849, mode: os.FileMode(420), modTime: time.Unix(1605259553, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelsBaseGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\xc8\xcd\x4f\x49\xcd\x29\xe6\xe2\xd2\xd7\xf7\xcc\xcb\x2c\xf1\x05\xf3\x14\x5e\xce\x69\x78\xb1\xac\xf1\x69\xc7\xdc\xa7\xcb\xbb\x9f\xf6\x4c\x7b\x3e\xab\xe5\xd9\xe4\xde\x27\x7b\xe7\x70\xa5\x95\xe6\x25\x2b\x20\x14\x6a\x68\x2a\x54\x73\x71\xd5\x72\x71\x95\x54\x16\xa4\x2a\x84\x64\xe6\xa6\xba\x65\xa6\xe6\xa4\x14\x2b\x14\x97\x14\x95\x26\x97\x28\x54\x73\x71\x3a\x17\xa5\x26\x96\xa4\xa6\x38\x96\x28\x64\xe6\x95\x98\x99\x28\x24\x24\x15\xe7\xe7\x59\x29\x25\xc3\x84\x95\x14\xb2\x50\x05\x74\xf2\x73\x33\x4b\x52\x73\x0b\x4a\x2a\x95\x12\x14\xf4\xf5\x15\x9e\x76\xcc\x7e\xba\x7b\xd7\xb3\xe9\xdb\x5e\x4e\xdf\xc2\xc5\x19\x5a\x90\x82\xcd\xb8\x52\x98\x30\xcc\x38\xb8\x00\xba\x71\xcf\x66\x6f\x79\x36\x6d\x03\xcc\x38\x97\xd4\x9c\x54\x2c\xc6\xa5\xc0\x84\x61\xc6\xe9\x2a\x25\x28\x60\x02\xb0\xeb\x16\xbc\x9c\xb9\x04\x6a\x5c\x2d\x17\x20\x00\x00\xff\xff\x3d\x1e\x9a\x40\x56\x01\x00\x00")

func modelsBaseGoBytes() ([]byte, error) {
	return bindataRead(
		_modelsBaseGo,
		"models/base.go",
	)
}

func modelsBaseGo() (*asset, error) {
	bytes, err := modelsBaseGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "models/base.go", size: 342, mode: os.FileMode(420), modTime: time.Unix(1605338696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelsBase_pipelineGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\xed\x6b\x1c\x45\x18\xff\xbc\xf3\x57\x3c\x0e\x45\xf6\xe4\xbc\xc9\x25\x31\x2d\x8b\x11\x02\x6a\xbf\x34\x21\x12\xfa\x29\x14\xb2\xbd\x9b\xbb\x8c\xd9\x37\x67\xe7\x52\x43\x58\xa8\xda\x82\x22\x29\x81\x04\xaa\x21\x69\x49\xa9\xb5\x08\x4d\x14\x51\x6b\x63\xf5\x9f\xb9\xbd\x3b\x3f\xf9\x2f\xc8\xbc\xec\xde\xe6\xb2\x89\x4d\xa4\xf7\x61\xe7\xe5\xf9\x3d\xbf\xe7\x6d\xee\x99\x89\xdc\xc6\x8a\xdb\xa6\xe0\x87\x4d\xea\xc5\x08\x31\x3f\x0a\xb9\x00\x1b\x59\xb8\x1d\xd6\xfc\x30\x68\x87\xcd\x9b\xb5\x90\xb7\x89\x9a\xbf\xdd\xe4\x6c\x95\x72\x72\x33\x0e\x03\x8c\x2a\x08\x89\xb5\x88\xc2\x3c\x8b\xae\x0b\xe6\x41\x2c\x78\xa7\x21\x60\x1d\x59\x11\x8b\xa8\xc7\x02\x0a\x8b\x37\x24\xb4\x36\x8b\x2c\xdf\x15\x8d\x65\x00\x00\xb3\x91\x20\xd4\xea\x04\x0d\x98\xa3\xb7\x8c\xbe\x5d\x01\x3b\xf2\xe0\x2d\xb3\xac\x28\x22\x0f\xa6\xe1\x4d\xb3\xb3\x8e\xac\x9c\xd9\xc9\xa9\xd7\x93\x2a\xb2\x34\xbd\x33\xe4\x57\xbb\x09\xb2\x38\x15\x1d\x1e\xe4\xd6\xec\xa8\xc0\x7f\x95\x8a\x79\x43\x67\x57\x72\x3e\x69\x96\xb5\xc0\xa3\x81\x1d\xd5\x32\x73\x15\x78\x17\xea\xa0\x1c\xc8\xf7\x60\x1a\xdc\x28\xa2\x41\xb3\x80\xab\x66\xe6\xf1\xa5\x78\x85\x45\xd8\x81\xb1\xa4\x52\x70\x04\x86\xd0\x53\x7d\x9a\x95\xa1\xd8\x15\x18\xba\x93\xeb\xaa\x28\xcb\x15\xb5\x96\xce\xb2\xd6\xac\xe4\x52\x95\x49\xad\x0c\xd3\xa0\x49\xb2\x18\xd5\xaa\x02\xef\xc1\xd8\xf9\xc2\x53\x7a\xd8\xd1\x6c\x23\x31\x96\x7b\xb8\x10\x72\x61\xc7\xf2\x78\x95\xf9\x67\xdc\x91\xf2\x0b\x78\x23\xd5\xb0\x03\x72\x78\x35\x5f\x56\x58\x64\xcb\x0a\x01\x0b\xc4\xd4\xe4\x68\xaa\xce\x57\x62\x39\x48\xab\x67\x9b\xbc\xc6\x7c\x26\x6c\x4f\x7e\xff\x97\x51\xc5\x80\x1d\x50\xe3\x7f\x9b\x9d\xe7\xe1\xc7\xb4\x21\xec\x48\x8f\x2c\x0c\xce\x4a\xff\x10\x75\x81\x22\x18\x65\xec\xc0\x90\xa6\xa4\x1a\x84\x5c\x0b\xc3\x95\x4e\x84\x08\x81\xfe\xe3\x17\xdd\x3f\xbf\xfe\xe7\x8f\x1d\x44\x88\x8c\x4d\x09\xb0\x23\x45\x96\xe1\x45\x84\x58\x16\x6e\xf1\xd0\xc7\xea\xff\xad\x7e\x78\xb0\xff\xb4\x8e\xab\x5a\xe6\x85\x0d\xd7\xfb\x90\x51\xaf\xa9\x10\x38\x7d\xb9\x95\x7e\xb5\x31\xd8\x7f\x9a\x3e\xbb\xdf\x3b\xf8\x25\x83\xb5\x42\x4e\x59\x3b\xc8\x80\x8a\x22\x3d\xfc\x3d\x7d\xb1\x9d\xde\xfd\x79\xf0\xd9\xf6\x71\xb4\x1b\x17\xcc\x49\x52\x8d\xd9\xbc\xd7\x3f\xda\xea\x3d\xd8\xed\x3e\x7f\xa6\xf1\xe9\xe6\x86\x56\x49\xa4\xd3\x49\x59\xe1\x55\x50\xb6\x8e\xed\xac\xe4\x6b\xc4\x05\x12\x9f\xa5\x0d\xf4\xa4\x34\xe7\xd7\x83\x5b\x2c\x68\x96\xe4\xbc\xa3\x04\x32\x21\x97\x62\xd7\xa3\xb1\x4f\x03\x5c\x16\x86\x26\xb0\x35\x5c\xf6\x7a\x16\xb4\x4f\x84\x61\xa4\x6f\x4c\x03\xc6\xe7\x8b\x21\x77\x43\x4f\x5e\x67\x0c\x1f\xf8\x91\x58\x7b\xfd\x81\x64\xe7\xd7\xb2\x2c\x1c\xb9\x62\xf9\xd8\x79\x2a\xfe\xb4\x46\x55\x03\x39\x8d\x29\x5f\xa5\x73\x1d\xcf\x9b\x31\xae\xce\x70\xee\xae\xc9\xe3\x28\x78\x87\x4a\x58\xf2\x4a\x3d\xee\x2a\x0d\xe7\xa8\xcb\xed\xb6\x1e\xb3\xf5\x69\xd7\x82\x81\xd5\x3e\xea\x50\xbe\x76\x8e\x7e\x64\xf4\xb0\x93\x31\x8c\xf6\x24\x42\xa0\xb7\xf3\x79\x6f\xf7\x87\xf4\xe0\x41\xff\xde\x8f\xfd\x9d\x3b\xbd\xad\x8d\xee\xcb\xdd\xf4\xee\x97\xe9\xed\x87\xfd\xed\x9f\x06\x7f\x7d\xdb\x7d\x6e\xa4\x25\x71\xcc\x34\x9b\x0b\xc2\x6d\x53\x3b\x96\x5f\x53\xb0\x2a\xac\xba\x5e\x87\xca\x4e\x4a\x79\xcb\x6d\xd0\xf5\xe4\x42\xfd\x54\x71\x3a\x9a\xec\xa4\xe3\x88\x10\x93\x35\xd5\x86\xe4\x64\xb4\x88\x8b\xe3\x37\x5a\x5e\xe8\x8a\xa9\x49\xf9\xe4\x20\xc4\x52\xf9\x1b\x41\x0d\xdf\x24\x84\x58\x0b\xd1\x32\xe5\xac\xe1\x7a\x05\x90\xae\x2c\x21\xd6\xfb\x2c\x16\x6e\xd0\xa0\xaa\x4b\x19\x00\x6e\x9a\x4d\x7c\x0c\x32\xdb\xf1\x04\x8b\x3c\x46\xb9\x03\x53\x13\x97\xaf\xd4\x27\x2e\x2b\xf9\xac\xfb\x69\x06\xc9\x2d\x8c\x49\x49\xa2\x9f\x6b\x26\xa2\xc2\x73\x4d\x2d\x4f\x0b\x0b\x96\xa4\xf7\x0e\x0e\x64\x91\x97\x4e\x9e\x5e\x42\x60\x31\x4f\x41\x7d\xbc\x5e\x7b\x67\x7c\x7c\xf2\xf2\x44\x15\x26\xea\xb5\xf1\xa9\xc9\xfa\xd8\x95\x04\xe9\xa4\x94\xe5\x44\x4d\x8d\x85\x4f\x24\xa8\xc4\x84\x3c\x40\x0f\xbf\x1b\x1c\x3e\xea\xed\xed\x77\x8f\x7e\x45\xc3\x0c\x16\xd8\xc2\x30\x5b\x19\xb6\x38\x03\x8d\x30\x4a\xb6\x6f\x0e\xd3\xcd\x27\x83\x83\xfd\xfe\xc1\xfd\xfe\xe6\x17\x7f\xef\x3d\x1a\xfc\xb6\xd7\x7f\x72\x84\x8e\xa7\x5f\xe3\xf5\x79\x2b\x32\x37\x8b\xa0\x02\xbb\xec\x4b\xd9\xe5\xd0\xdf\xb9\xa3\x39\xf3\x5b\x02\x95\x14\x4e\x3f\x04\xa0\x8c\x7c\x08\xd2\x16\x08\xc9\x8a\x8c\x8a\x15\xce\x6c\x67\xc5\x1a\x12\xf9\x43\x50\x35\xf4\x99\xa0\xb2\x95\xe0\x25\x15\xff\xee\xed\xf4\xf1\xf7\xda\x3f\x07\x7c\x92\x11\x27\xe8\xdf\x00\x00\x00\xff\xff\xd7\x26\xbf\xab\x10\x0c\x00\x00")

func modelsBase_pipelineGoBytes() ([]byte, error) {
	return bindataRead(
		_modelsBase_pipelineGo,
		"models/base_pipeline.go",
	)
}

func modelsBase_pipelineGo() (*asset, error) {
	bytes, err := modelsBase_pipelineGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "models/base_pipeline.go", size: 3088, mode: os.FileMode(420), modTime: time.Unix(1596776922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _prod_dockerComposeYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x4f\x6f\xe2\x30\x10\xc5\xef\xf9\x14\x23\xf6\xba\x24\x48\x7b\x58\xe4\x33\x55\xd5\x43\x09\x42\x3d\xb4\xaa\x2a\x64\x9c\x81\x5a\xc4\x33\xd1\x78\x48\x40\x88\xef\x5e\x91\x3f\x6d\x2a\x71\xb2\xe7\xbd\xdf\xb3\x67\xe6\x0f\x7c\xaa\x56\xd1\x64\x59\xc1\x2e\xa6\x05\xbb\x03\x4a\xea\x38\x64\x8e\x43\xc5\x11\x87\x73\xba\xf3\x25\x66\x49\x8d\x12\x3d\x93\x81\xc9\xbf\xf4\xff\x24\x49\x22\x4a\xed\x1d\x46\x93\x00\x5c\x2e\xe9\xa2\xcd\x2f\x6d\xc0\x95\x70\x71\xbd\xde\x64\x00\x1f\xec\x1e\xcd\x5d\xbf\xb4\x8a\x51\x5b\xca\x31\xa9\xf5\x84\xb2\x21\x1b\xee\xe3\x2d\x27\x18\xd5\x8a\x1a\xb0\x65\x63\xcf\xb1\xd5\x1a\x96\x83\xa7\xfd\xa6\xf0\x62\x20\xb3\x55\xd5\xaa\x48\xb5\x17\xa6\x80\xa4\x5d\x23\x00\x8f\xf9\x6a\x9d\xbf\xbe\x99\xef\xb1\xf7\x5c\x09\x9f\xce\xa9\xa3\xbf\x85\x17\x74\xda\x83\xab\x7c\xfd\x62\x60\x3e\x1b\x72\x4f\xcb\xcd\x73\xbe\x78\x30\x20\x58\xa2\x8d\xd8\xea\x15\x8b\xc6\xe1\xe9\x29\xcc\x67\xf3\x99\xe9\x23\x35\x97\xc7\x80\x23\x33\xcd\x1c\xd3\x2e\x3d\x87\xd2\xdc\x1a\xfc\xa9\xa4\x19\x31\x51\xad\x7a\xd7\x11\xfd\xfd\x97\x2f\x47\x52\x1f\xb0\x03\x86\xa2\x27\x08\xf5\xb6\x87\xd1\x9f\x0d\x6e\xfb\xd5\x86\x60\xa9\x30\xf0\x0e\xf0\x91\x24\x63\xb0\xc1\x6d\xc7\xe3\x49\x51\xc8\x96\x06\x54\x8e\x98\x7c\x05\x00\x00\xff\xff\x5d\xf3\x73\x1d\x19\x02\x00\x00")

func prod_dockerComposeYmlBytes() ([]byte, error) {
	return bindataRead(
		_prod_dockerComposeYml,
		"prod_docker-compose.yml",
	)
}

func prod_dockerComposeYml() (*asset, error) {
	bytes, err := prod_dockerComposeYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "prod_docker-compose.yml", size: 537, mode: os.FileMode(420), modTime: time.Unix(1605517834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _prod_docker_buildSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\xc1\x4a\x03\x31\x10\x86\xef\x79\x8a\x71\xdb\xb0\x8a\x4c\x7a\x17\x7a\x91\x22\x1e\xac\x08\x7a\xd0\x93\x64\x9b\x58\x8b\x89\x29\x9b\x2d\x2a\x21\x57\xab\xa2\xee\x41\x68\x7d\x01\x8f\x82\xa0\x68\x51\x7c\x9b\x8d\xb4\x6f\x21\xad\x6b\xd1\xdb\x3f\xdf\x30\xf3\xfd\x95\x85\x5a\xd2\x39\xae\x25\xdc\x1e\x12\x2b\x33\xc0\x53\x52\x81\xf1\xed\x5b\xc8\x07\xe1\xf3\x2e\x5c\xde\x7c\x0d\x5f\x27\xc3\x17\xb2\xda\xeb\x28\xb1\xd3\xd1\xb2\x5e\x5d\x14\x3c\x93\xb0\x1c\xd3\x3d\x46\x35\xa3\x82\xd1\x75\xda\xa4\xdb\xf1\x12\xa9\x40\x78\x3a\x2f\x3e\x1e\x8a\xd1\x55\xc8\xef\x27\xfd\x3c\xbc\xe7\xe1\x62\x18\xae\x07\xe3\xfe\x33\x6c\x34\xd6\x14\x6f\x5b\xf8\x59\x15\xa3\x47\x52\x92\x7a\x84\x16\xf0\x84\x00\x00\xe0\x2e\xc4\xce\xb1\xa6\x11\x3d\x25\x37\xb9\x96\xde\xd7\xda\xca\x24\x5c\xb1\x3f\x15\xdc\x3c\xfb\x98\x44\x44\x98\xd6\x91\x4c\x21\x99\x42\x40\x4c\x35\x20\xce\x06\xe4\x69\x1b\xe6\x96\xaa\x2b\xa3\x8f\x00\x33\x70\x8e\x35\x66\x87\x53\xcd\x56\x6a\x84\xf7\x2b\x8a\x67\xd2\x66\xc0\xca\x97\xd8\x32\xba\x6b\xac\x04\x3c\x80\xa8\x9b\x1a\xb1\xff\x9f\xb3\x33\xad\x22\xe8\x75\x01\xc5\xaf\x92\x7c\x07\x00\x00\xff\xff\xf2\xea\x11\x42\x52\x01\x00\x00")

func prod_docker_buildShBytes() ([]byte, error) {
	return bindataRead(
		_prod_docker_buildSh,
		"prod_docker_build.sh",
	)
}

func prod_docker_buildSh() (*asset, error) {
	bytes, err := prod_docker_buildShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "prod_docker_build.sh", size: 338, mode: os.FileMode(493), modTime: time.Unix(1604726134, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runtimeGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func runtimeGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_runtimeGitkeep,
		"runtime/.gitkeep",
	)
}

func runtimeGitkeep() (*asset, error) {
	bytes, err := runtimeGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "runtime/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1596776922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceBaseGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xca\x41\xaa\xc2\x30\x10\x80\xe1\x75\xe7\x14\x43\x57\x09\xbc\xd7\x9e\xc0\x9d\x88\x5d\x79\x04\x69\xd2\x31\x4c\x25\x99\x32\x99\x16\x41\xbc\xbb\x50\xd0\x95\xbb\x1f\xfe\x6f\x19\xe3\x7d\x4c\x84\x95\x74\xe3\x48\x00\x9c\x17\x51\x43\x07\x4d\x9b\xa4\xcb\x52\x92\x4c\xa1\x13\x4d\xfd\xde\xff\x93\xf2\x46\xda\x87\x2a\xa5\x5f\x94\x33\x1b\x6f\xd4\x82\x07\xb8\xad\x25\xa2\xc9\x25\xcc\x14\x6d\x38\xba\x8a\xd5\x94\x4b\xf2\xe8\x24\xcc\xc3\x84\x5f\xde\x7d\x8c\xc7\x27\x34\xfb\xfc\xc3\x2b\x1e\x7e\x88\x93\x4a\x3e\xd3\xc3\x55\x0f\x8d\x92\xad\x5a\xe0\x05\xef\x00\x00\x00\xff\xff\x67\x86\x7d\x0d\xb5\x00\x00\x00")

func serviceBaseGoBytes() ([]byte, error) {
	return bindataRead(
		_serviceBaseGo,
		"service/base.go",
	)
}

func serviceBaseGo() (*asset, error) {
	bytes, err := serviceBaseGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/base.go", size: 181, mode: os.FileMode(420), modTime: time.Unix(1596776922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticFaviconIco = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\x79\x6c\x4c\xdf\x17\x7f\x63\x69\xb5\x55\x2d\x43\xb5\x45\x15\x51\x5f\x34\x88\x3d\x41\xd2\x36\xf6\x4a\xd4\xf2\x47\x2d\xa9\x35\xf6\x2d\x6a\x29\x15\x6d\xda\xa2\x6a\x27\xb6\x50\x4b\xc5\x96\x50\x45\xed\x91\xa6\x29\x8a\xd0\x8a\x96\x56\x2d\xa5\x94\x10\xfe\xd2\xf8\xc3\x1f\xce\x2f\x9f\xf3\xfb\xde\xc9\x74\x96\x7a\x77\x66\x6a\x9e\x7c\xdf\x24\x9f\xd4\xbc\x79\xf7\xbe\x73\xce\x3d\xf7\x9c\xcf\x39\xef\x86\xa2\x18\x14\x83\x12\x11\x81\xbf\xa1\xca\x3f\x51\x8a\x12\xa0\x28\xca\x3f\x8a\xa2\x44\x28\x8a\x92\xac\xfc\xff\x3a\x7f\x22\x14\xab\x8f\xc1\x60\x20\x1d\x3a\x74\xe8\xd0\xa1\x43\x87\xe3\x50\x14\xc5\x04\x7c\xf7\xf6\xf6\xa6\xa0\xa0\x20\x0a\x0b\x0b\xa3\xee\xdd\xbb\x53\x78\x78\xb8\x2a\xe0\x5e\x8c\x69\xd3\xa6\x0d\xf9\xf8\xf8\xd8\x9c\x5b\x2b\x10\x32\x41\xd7\xa8\xa8\x28\x4a\x49\x49\xa1\x6b\xd7\xae\x51\x65\x65\x25\x7d\xf9\xf2\x85\xde\xbf\x7f\x4f\xe5\xe5\xe5\x54\x5a\x5a\x2a\x05\x8c\xa9\xaa\xaa\xe2\x39\x30\xd7\xad\x5b\xb7\x68\xd3\xa6\x4d\x34\x72\xe4\x48\xf2\xf5\xf5\xd5\x84\xde\xf8\xdb\xaf\x5f\x3f\x3a\x78\xf0\x20\xbd\x7e\xfd\x9a\xf5\x4e\x48\x48\xa0\xa1\x43\x87\x52\x48\x48\x08\x79\x79\x79\x51\x83\x06\x0d\x1c\x7e\x06\xc6\x7a\x7a\x7a\xb2\x1f\x44\x46\x46\x52\x7c\x7c\x3c\x5d\xba\x74\x89\xed\x91\x95\x95\x45\x83\x07\x0f\xe6\x7b\xdc\xe1\x13\xbd\x7b\xf7\xa6\xab\x57\xaf\xd2\xfd\xfb\xf7\x69\xd6\xac\x59\x64\x34\x1a\x6b\xd9\xa5\x3e\x6d\xee\xe7\xe7\x47\x93\x27\x4f\xa6\xfc\xfc\x7c\xca\xcb\xcb\x63\x3b\xfc\x29\xbd\xb1\xa6\x19\x19\x19\xf4\xf4\xe9\x53\x1a\x37\x6e\x1c\x35\x6c\xd8\xd0\x2d\xf6\xc7\x33\xb1\xf6\xc3\x87\x0f\xa7\xc7\x8f\x1f\xd3\x81\x03\x07\xea\x75\x5f\xe0\x79\xf0\xc3\xbb\x77\xef\xd2\xee\xdd\xbb\x39\x2e\x69\x21\x16\x41\x86\x26\x4d\x9a\xd0\x86\x0d\x1b\xa8\xb8\xb8\x98\x3a\x77\xee\xec\x72\xb9\x30\x5f\xa7\x4e\x9d\xe8\xd9\xb3\x67\xec\xeb\xee\xd6\xd9\x9e\x8c\x13\x26\x4c\xa0\x8a\x8a\x0a\xea\xd9\xb3\xa7\x4b\x6d\xd0\xba\x75\x6b\xf6\xf7\x29\x53\xa6\xb8\x5d\xcf\xdf\x21\x3a\x3a\x9a\x6d\xd0\xb1\x63\x47\x97\xd8\xa0\x71\xe3\xc6\x74\xe3\xc6\x0d\xda\xba\x75\xab\x26\xf3\xaf\x2d\x3f\x40\x0e\x7a\xf0\xe0\x01\xe7\x64\x67\xe7\x9a\x3d\x7b\x36\xe7\xe2\xea\xea\x6a\xda\xbb\x77\x2f\xb5\x6f\xdf\x5e\x93\x36\x80\x4c\x81\x81\x81\xb4\x65\xcb\x16\xfa\xf8\xf1\x23\x95\x94\x94\xd0\xda\xb5\x6b\x9d\x92\xd5\xdf\xdf\x9f\x39\x08\xf6\x13\xf6\x40\x7a\x7a\x3a\xdb\x61\xfb\xf6\xed\xfc\x5d\x0b\x76\x80\x0c\xcd\x9b\x37\xa7\xd4\xd4\x54\x96\x6d\xcf\x9e\x3d\xcc\x3d\x42\x43\x43\xf9\x3b\x62\xb6\xa3\xf3\x82\x6f\x9c\x38\x71\xc2\xa4\xa7\xc8\x01\xd0\x3f\x2e\x2e\x4e\x4a\xff\x46\x8d\x1a\x51\x6c\x6c\x2c\x65\x66\x66\x72\xae\x1a\x31\x62\x84\x89\x1b\x81\x37\xee\xdb\xb7\x8f\x8e\x1e\x3d\xca\xf3\x7a\x78\x78\x48\xc9\x39\x76\xec\x58\x9e\xb3\x43\x87\x0e\xb5\xae\x43\x4e\xac\x99\x23\xeb\x84\x7d\x8f\x38\xd2\xbf\x7f\x7f\xab\xf1\xb2\x5c\x1c\xba\x9f\x39\x73\x86\xf9\x12\x62\x34\xe2\x68\x61\x61\x21\x6d\xde\xbc\x99\x12\x13\x13\x39\x7f\x4f\x9b\x36\x8d\x62\x62\x62\xe8\xc2\x85\x0b\x94\x9b\x9b\xcb\xbc\x4f\xad\xfe\xb6\x64\x11\x39\x0b\x7b\x41\xd4\x10\x32\x00\xaf\x2d\x2b\x2b\x73\x8a\xbf\x0a\x39\xc0\xd5\xc0\xdf\x61\x07\x71\x0d\x5c\xe5\xf9\xf3\xe7\xcc\x65\xe1\xbf\x42\x7e\xf0\xa9\x9c\x9c\x1c\x9a\x3f\x7f\xbe\x4b\xf6\xd7\x9d\x3b\x77\x68\xf4\xe8\xd1\xd2\x32\xaf\x5a\xb5\x8a\xe3\x9d\x3d\x19\xd4\xae\x3f\xee\x81\x5f\x4f\x9f\x3e\xdd\xea\x7a\x5a\x5a\x1a\xed\xda\xb5\xcb\x6a\x9e\xf1\xe3\xc7\x53\x76\x76\xb6\xea\xf9\xeb\xba\x2f\x29\x29\xc9\x94\xbb\x64\xf4\x3f\x7b\xf6\x2c\xd7\x6e\x45\x45\x45\x36\x31\x73\xe6\x4c\xd5\xf2\x0d\x1a\x34\x88\x63\xb3\xe5\x75\xd4\xb8\xa8\x77\x2d\xc7\xb4\x68\xd1\x82\xeb\x1d\xb5\xf3\x83\x87\xdb\x93\x13\xfe\x75\xfb\xf6\x6d\xe9\xf5\x7f\xf8\xf0\x21\x4d\x9a\x34\x89\x7a\xf5\xea\x65\x13\xc8\x0d\x32\xeb\x53\x97\x1f\x39\xea\x5b\x06\xb3\xbd\x64\x4f\x4e\xf8\xfe\xab\x57\xaf\xa4\xf6\x31\xee\x45\x3d\x6b\x1e\x4f\xff\x56\x60\x9d\x3e\x7f\xfe\xac\x3a\x9e\x1a\xfe\x8d\xd7\xef\xde\xbd\xa3\xe0\xe0\x60\xb7\xcb\xef\x2c\x9a\x36\x6d\xca\xfa\xcb\xe4\x00\xe8\x0f\xde\x13\x14\x14\xe4\x76\xf9\x9d\x05\xf4\x86\xfe\xb0\x83\xae\xbf\xba\x31\xc8\xc1\x6f\xdf\xbe\xa5\x76\xed\xda\xb9\x5d\x7e\x73\x38\x52\x7f\x21\x36\x42\x7f\x2f\x2f\x2f\xa9\x71\xe0\x26\xdd\xba\x75\x93\x1a\x33\x64\xc8\x10\xe6\xb1\xa8\x41\x5d\xad\x3b\xf8\x28\xb8\x22\xb8\x44\xd7\xae\x5d\x55\x8f\x43\x9d\x02\x0e\x28\xb8\x97\x5a\x3b\xa3\xe6\x1d\x35\x6a\x94\x6a\x7b\xfb\xf9\xf9\xd1\xb7\x6f\xdf\xe8\xd7\xaf\x5f\xf4\xe3\xc7\x0f\xae\x3f\x5c\xa9\x3f\x38\x33\xe6\x06\xc0\xe9\xd4\x8e\x03\x8f\x05\xbf\x96\xf5\x33\xd4\x0e\xab\x57\xaf\x56\xad\xbf\xd1\x68\xa4\x9a\x9a\x1a\x96\xef\xe7\xcf\x9f\xdc\x87\x72\xa5\xfe\xe0\xd0\x42\xff\x82\x82\x02\xd5\xe3\xc0\xd3\xb2\xb2\xb2\xa4\x9f\x87\x9a\xea\xe6\xcd\x9b\x52\x3c\x04\xbc\xf5\xe2\xc5\x8b\xf5\xd2\x23\x83\xff\x62\x3d\x0e\x1d\x3a\x44\x5d\xba\x74\x51\x2d\xd3\xa9\x53\xa7\xb8\x87\x21\xfb\x3c\xd4\x24\xd8\x37\xd8\x3f\x32\x7e\x53\x9f\x3d\x22\xd9\xf9\x11\xf3\xab\xab\xab\x1d\x8a\xe3\x78\xc6\xf1\xe3\xc7\x69\xd9\xb2\x65\x9a\xe8\x73\x38\x22\xff\xd4\xa9\x53\xe9\xca\x95\x2b\x0e\x8f\xc7\xbe\xd1\x6a\xbf\x57\x8d\xfc\x31\x31\x31\xdc\x73\x70\x74\xfd\x4a\x4a\x4a\xb8\x86\x70\xb7\x2e\x8e\xa2\x6d\xdb\xb6\xec\xff\x32\xb9\x4f\xc0\xdb\xdb\x9b\xbe\x7e\xfd\x2a\xc5\x9b\xb4\x06\xe8\xfd\xe9\xd3\x27\xa9\x18\x26\x80\xfc\x0d\x0e\xe8\x6e\x1d\x9c\x45\x71\x71\x31\xf5\xe9\xd3\x47\x7a\xdc\x80\x01\x03\xb8\x87\xfe\x37\xc6\x3e\x73\x20\xfe\x8d\x19\x33\x46\x7a\x1c\xc6\x60\xac\xb3\xfd\x89\x3f\x81\xba\xe4\x39\x76\xec\x98\x55\xef\x4d\x0d\xc0\x37\x4f\x9e\x3c\x69\x73\x5e\xc4\x04\xf8\x94\x16\x6c\x00\x19\xc2\xc3\xc3\xb9\x67\x66\xeb\xf7\x9d\x3b\x77\x72\x0e\x97\x9d\x77\xce\x9c\x39\x7c\xae\xc1\x52\x47\xc4\x92\xc2\xc2\x42\xe6\xc7\xee\xd6\x5d\xe8\x0f\x5e\x58\x5a\x5a\xca\xef\xfc\x2c\x7f\x4f\x4b\x4b\xa3\x75\xeb\xd6\x49\xcf\xbb\x64\xc9\x12\xab\xde\x2c\x6a\xb0\xbc\xbc\x3c\x3e\x87\xe2\xae\x73\x17\xb6\xf4\xc7\xdf\xa5\x4b\x97\xd2\x93\x27\x4f\xac\xf2\x15\x74\x4f\x4d\x4d\x95\x9e\x77\xf9\xf2\xe5\xb4\x6d\xdb\xb6\x5a\xef\x7e\x16\x2e\x5c\x48\xd7\xaf\x5f\xe7\xfe\xc0\xef\xe4\xa9\x2f\x5d\xeb\xea\x63\x82\xaf\x61\xbd\xcd\x65\x48\x48\x48\xe0\xf5\x92\x7d\x56\x7c\x7c\x7c\xad\xbe\xb9\xa7\xa7\x27\xbd\x7c\xf9\xd2\x2e\x1f\xf2\xf1\xf1\xe1\x9e\x39\xea\x8d\x61\xc3\x86\xf1\x99\x04\x57\xd8\x02\x73\x78\x78\x78\x50\x44\x44\x04\x1d\x39\x72\x84\x63\xb2\xbf\xbf\xbf\xcd\x7b\x43\x42\x42\xb8\x66\x31\x7f\x9f\x02\xfd\xd3\xd3\xd3\xa5\x9f\x0b\x7f\x42\xec\x10\xf3\x44\x46\x46\xd2\xbd\x7b\xf7\x6c\xde\x0b\x9f\xcb\xcd\xcd\xa5\xd3\xa7\x4f\xd3\xa2\x45\x8b\xf8\x4c\x50\x55\x55\x15\xaf\xc7\x8c\x19\x33\xb8\x8f\x02\x7b\x18\x2c\x6a\x18\x7b\x80\xad\xc3\xc2\xc2\x38\x06\x67\x66\x66\xd2\x9b\x37\x6f\xb8\x86\x5f\xb1\x62\x05\xf7\x57\xf2\xf3\xf3\xed\xc6\xbb\xec\xec\x6c\xae\x95\x85\xdc\x89\x89\x89\xec\x13\xb2\xfa\xa3\x66\x44\xad\x29\xe6\x49\x49\x49\x61\x58\xde\xe7\xeb\xeb\xcb\xbd\x12\xe8\x8a\x75\x12\x3e\x8a\x58\x84\x18\x0a\x7f\xa8\xa8\xa8\xe0\x73\x6c\xe0\x22\x39\x39\x39\xfc\xae\x12\x3e\x99\x9c\x9c\xcc\xd8\xb8\x71\x23\xeb\x75\xfe\xfc\x79\x7a\xf4\xe8\x11\xf7\xab\xa0\xf3\xb9\x73\xe7\xd8\x9e\xa8\x77\x45\xbc\xc1\xde\xc3\xba\x60\x2d\x8c\x46\xa3\x95\x8f\xcd\x9b\x37\x8f\x0e\x1f\x3e\x6c\xba\x8e\xb9\xd7\xac\x59\x23\xad\xbf\xf9\x3b\x28\x00\xb2\xe0\x9a\xf9\x3d\xcd\x9a\x35\xe3\x77\x2b\x78\x1e\x62\xa3\x3d\xff\x35\xfc\xdb\x87\xef\xdb\xb7\x2f\xbf\xab\x81\x8c\xf0\xcb\xa4\xa4\x24\x06\xe4\x5b\xb0\x60\x01\x4d\x9c\x38\x91\xdf\xb7\xfe\xee\x2c\x19\x6c\x91\x91\x91\xc1\xef\x68\x02\x02\x02\x6a\xdd\x37\x70\xe0\x40\xb6\x8d\xb8\x86\x1c\x36\x77\xee\x5c\x69\xfd\x31\x0f\xfc\x58\xe8\x0f\x5f\xe8\xd1\xa3\x87\xe9\x77\xec\x31\xf8\xe1\xfe\xfd\xfb\x99\x67\xcb\xee\x75\x4b\x9f\x97\x1d\x0b\x1b\x60\x6d\x8b\x8a\x8a\x6a\xf5\xa9\x83\x83\x83\xf9\x1d\xb2\xf8\x7e\xf9\xf2\x65\x87\xf8\x5f\x60\x60\x20\xd7\x4e\xe6\xb1\x5e\xc8\x89\xbd\x57\x50\x50\xc0\x67\x0d\xea\xca\x05\xf5\x09\x21\x0b\xf6\x0f\xf6\x95\x38\xe7\x60\x9e\xaf\x80\xb2\xb2\x32\xa9\x7e\xa9\x00\xf4\xc2\x1e\x34\xef\x63\x62\xbe\x96\x2d\x5b\xb2\x5f\xec\xd8\xb1\xc3\x6d\x67\xff\x2c\x81\x1c\x8f\x5a\x1d\xf5\xae\xb9\x3c\xe2\xdd\x97\x6c\xef\xdb\x60\xd6\x3b\x8b\x8b\x8b\x33\x7d\x07\xf7\x43\x7c\x42\x3e\xd1\x0a\xff\x11\x58\xb9\x72\x25\xf7\xec\xb1\x5e\x62\xed\xa3\xa3\xa3\xf9\xdc\x81\xa3\xfe\x85\x3c\x82\x78\x8d\x7f\x63\x8f\x61\xaf\x21\x97\x38\x7b\x26\xa2\xbe\x00\xce\x56\x5e\x5e\x6e\x3a\xfb\x86\xdc\xb9\x78\xf1\x62\x87\xd7\x09\x9c\xa6\xb2\xb2\x92\xed\x08\x6e\xb9\x7e\xfd\x7a\xcd\xea\x2e\x00\x7d\x5f\xbc\x78\xc1\xe7\xc4\x3f\x7c\xf8\x40\xad\x5a\xb5\x72\x78\x2e\xd8\x2d\x36\x36\x96\xbe\x7f\xff\xce\x39\x4a\xeb\xba\x0b\x20\xdf\xd5\xd4\xd4\x70\x4e\x75\x76\x8f\x8a\xf3\x05\xee\xd6\x49\x16\x90\x59\x4b\xf1\x49\x87\x0e\x1d\x3a\x74\xe8\xd0\x12\xac\xff\x47\x00\xfd\xf3\x5f\xfa\xfc\x2f\x00\x00\xff\xff\x5b\xf5\x01\x55\x3e\x42\x00\x00")

func staticFaviconIcoBytes() ([]byte, error) {
	return bindataRead(
		_staticFaviconIco,
		"static/favicon.ico",
	)
}

func staticFaviconIco() (*asset, error) {
	bytes, err := staticFaviconIcoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/favicon.ico", size: 16958, mode: os.FileMode(420), modTime: time.Unix(1596776922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xb2\x01\x51\x0a\x39\x89\x79\xe9\xb6\x4a\xa9\x79\x4a\x20\x81\xd4\xc4\x14\x3b\x2e\x05\x05\x05\x05\x9b\xdc\xd4\x92\x44\x85\xe4\x8c\xc4\xa2\xe2\xd4\x12\x5b\xa5\xd0\x10\x37\x5d\x0b\x25\xa8\x54\x49\x66\x49\x4e\xaa\x5d\x08\x88\xb4\xd1\x87\x70\xb8\x6c\xf4\x21\x7a\x6d\x92\xf2\x53\x2a\xed\xb8\x32\x52\x73\x72\xf2\x15\xca\xf3\x8b\x72\x52\xb8\x6c\xf4\x21\x62\x36\xfa\x10\x6b\x01\x01\x00\x00\xff\xff\xaa\x34\x59\x43\x87\x00\x00\x00")

func staticIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticIndexHtml,
		"static/index.html",
	)
}

func staticIndexHtml() (*asset, error) {
	bytes, err := staticIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/index.html", size: 135, mode: os.FileMode(420), modTime: time.Unix(1604655879, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _utilsUploadOssGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x57\x6d\x6b\x1b\xcb\x15\xfe\xbc\xfb\x2b\xe6\x2e\xae\xd9\xbd\x95\x56\xf2\xbd\xb9\xa6\x15\xd9\x40\xe2\xa4\x89\x69\xf3\x42\x65\x53\x68\x08\xf5\x68\x77\xa4\x1d\x7b\x77\x67\x99\x19\x55\x56\x85\x20\xd0\x40\xda\xd0\x10\x0a\xa5\x69\xdd\xd0\xa6\x10\x48\x3e\x05\x7f\x28\x69\x48\x0c\xfd\x33\x96\x9c\xfc\x8b\x32\x2f\xbb\x3b\x2b\xd9\xb1\xa3\x0f\x96\x66\xce\x79\xce\x99\x97\x67\xce\x73\x9c\xc3\x70\x0f\x0e\x10\x18\xe6\x09\x81\x91\x6d\xe3\x34\x27\x94\x03\xd7\xb6\x9c\x90\x8e\x73\x4e\x5a\x71\x0a\x43\xa7\x1a\xb2\x18\xae\x89\x21\xca\x42\x12\xe1\x6c\xd0\xea\x41\x86\xd6\x2f\xd5\xa6\x76\x19\xc9\xe4\x04\xa5\x84\x32\xf1\xab\x9f\x72\xf1\x15\x43\x16\x8b\x6f\x4c\xc4\x5f\xc6\x29\xce\x06\xd2\xce\x71\x8a\x1c\xdb\xb3\x6d\x3e\xce\x11\xb8\xcb\xd8\x06\xc9\xfa\x80\x71\x3a\x0c\x39\x98\xd8\xd6\xd5\x30\x44\x8c\xfd\x1c\x8d\x37\x23\x20\x3e\x0a\x0a\x5a\x2d\x60\x58\x0c\xb7\x2e\x0a\x29\xe2\xa7\xb9\x29\x8b\x6d\xdd\x22\x8c\x03\xe3\x53\xb9\xc6\x84\xf1\x93\x83\x47\xf3\x97\x47\xb3\xa3\x67\xc7\xef\x3f\x80\xde\x30\xdc\x43\xfc\x0e\x4c\x91\x8f\xb2\x28\x27\x38\xe3\x1d\x10\x73\x9e\x77\x5a\xad\xcb\x95\xf1\x8a\x4f\x18\x6b\x86\x59\x93\xc5\x30\x1b\xc4\x10\xfb\x30\xc1\xe3\x61\x16\x32\x3f\x24\xa9\x6d\x6d\xc0\x24\xe9\xc1\x70\x6f\x9b\x26\x0b\x19\x8f\xdf\x3f\x39\x3e\x7a\x39\xfb\xc7\x3f\x3f\x1d\xfe\x7e\xfe\xe2\xe9\xec\xc9\xbf\x67\x7f\x7f\x73\x72\xf0\x68\xfb\x97\xbf\xb0\xad\x6d\x79\x33\xd7\x31\x5d\x5a\xe8\xc9\x5f\xde\xcc\xff\xf0\x5f\x05\x9e\xff\xf5\xf1\xf1\xc7\x77\xf3\xe7\xef\xe6\x7f\x7a\x3c\x7b\x7b\x70\x72\xf0\x68\xf6\xc7\xa7\x27\x47\x0f\x6d\xeb\xc6\x7e\x8e\x29\x62\x9b\x99\xc6\xe3\x8c\xaf\x5f\x02\x02\xff\xe9\x7f\x8f\xe7\x2f\xfe\x35\x7f\xfe\xee\xf3\xf3\xff\x34\xc0\xe7\x8f\x7f\xfb\xf4\xf6\xd5\xf7\x6d\x66\x5b\x5d\xfc\x3b\x74\x1b\x67\xe5\xd9\x54\x10\x95\x66\xf6\xea\xf5\xec\xf0\xd9\xfc\xc5\xc3\xd9\xe1\xb3\xd9\xc3\x23\x0d\x80\xfb\x17\x00\xbc\x7a\x2d\x00\x53\x7d\xd1\x84\xb1\xbb\xbd\x5d\xe3\x9e\xf5\xcd\x0b\x87\xfe\x30\x0b\xc1\x1d\x34\x72\x43\x41\x05\x6d\xf0\x80\x4b\xc0\xb7\x0a\xe6\x09\x00\x01\x01\x58\x55\xe3\x89\xf6\xe9\x00\x81\x98\xda\x16\x45\x7c\x48\xb3\x32\x99\xb0\xe1\x41\x57\xe5\xaa\x52\xca\xf3\x81\x1c\x93\xac\x38\xda\xf2\xb3\x23\x88\xdc\x71\x50\xe9\xe1\xec\xd8\xd6\x06\xc9\x22\x2c\x06\x0c\xdc\x7f\x70\xff\x01\xce\x38\xa2\x7d\x18\xa2\xc9\xb4\xf0\x0f\x4b\x0f\x67\xa7\xcc\x7e\x8f\x24\x38\x1c\x6f\x91\x3d\x94\x9d\xc1\x6b\x9d\x5d\x07\x81\xd2\xb2\x19\x39\x3b\x06\x49\x5b\xad\x3a\x71\xeb\x10\x41\xdc\x9a\x7b\x01\x51\x14\xa8\x5d\x8d\xb9\x35\xb4\x00\x12\x90\x2e\x1e\x64\x90\x0f\x25\xaa\x9e\x85\x15\x16\x13\x25\x20\x6a\x87\xa7\x2d\x2c\x97\x96\x53\xb2\x5c\xc7\x14\x85\x9c\xd0\xf1\x12\x24\xc2\x74\x69\x2b\x12\x52\xbc\xa2\xe5\x2c\xa1\xb6\x34\x48\x8a\x39\x4a\x73\x2e\x32\xaa\xbd\x54\x74\xae\x6f\x9f\x29\x4b\x3d\xd3\xc5\x68\x7e\x4a\x20\xb8\x7f\x6e\xa0\x3a\xfd\x8b\xbd\xdc\x83\x14\xa6\x06\x2b\x16\x2b\xc5\x19\x1b\xdd\xa6\x89\x24\xa4\x1e\x5e\x23\xd1\xf8\x0b\xde\xc2\xbc\xe8\xbe\x25\x56\x71\xb6\xbb\x30\x2b\x0a\xcb\xc7\x18\xc6\x28\xdc\x13\xaf\xc8\x25\xbd\xdd\xea\x15\xca\x2a\x2f\xdf\x62\x6f\xd7\x37\x09\x1d\xe8\xd0\xcc\xdf\xa2\x38\xed\xe6\x30\x44\xee\x82\x8f\xb7\x80\xd2\x75\xfb\x5c\xa4\xf2\xd3\x68\xf9\x22\xce\x82\x08\xa3\xf6\xab\x2a\xe9\x59\xce\xa5\x87\x46\x98\x17\x71\x16\xc6\xf0\xf1\x6c\x0b\xf7\xc1\xd2\x31\x04\xc0\x71\xc4\xf9\xe8\x82\xa4\x0e\x8c\xf9\xa2\xb6\x39\x27\x47\x1f\x66\x87\x7f\x36\x55\xcc\xf1\x6c\x6b\xba\x1c\xa8\x38\x99\xaf\x09\xa6\x30\xf5\x80\xea\xb0\xce\x8f\xa2\x64\x45\x8a\x61\x3d\x40\xa5\x27\x97\x03\xd0\x96\x41\xea\xd3\x01\xf8\xbe\x2d\x01\x3a\x76\x86\x93\x92\x42\x66\xf5\xbe\x89\xb8\x51\x14\x5d\x0f\xb8\x5c\x56\x47\x63\xb2\x21\x16\xa6\x16\x27\xab\xbd\x18\x05\x26\x0f\xd5\x89\x8b\xe9\x6f\x02\x91\xc8\xd8\x93\x58\x82\x6d\x65\x64\x04\x3a\x01\x10\xfd\x85\x7f\x87\x8c\x5c\xcf\xdf\xce\xf0\xbe\xeb\xd9\x96\x2a\x7d\xd1\x55\x2e\xec\xc2\xed\xc7\x80\x54\xbb\xb0\xad\xdf\x42\x0a\xe4\x82\x74\xf5\x0c\xc0\x00\xf1\x9b\x29\xdf\x64\xe4\x27\xeb\xed\x35\xd7\x70\xf6\x6c\xdb\x6a\xb5\x42\x8a\x20\x47\x20\x17\x07\xac\x2a\x1e\x10\x4f\x4a\x45\x0a\xa5\xf8\xd4\x34\xc8\xb6\xd4\xa4\x6f\x28\x50\x60\xa6\x2c\x91\x4a\x4d\x40\x4d\x6c\x24\x5a\x1b\x02\x00\xf3\x1c\x65\x91\x5b\x4e\x35\x80\xc3\x38\xa4\x9c\x35\x47\x98\xc7\x4e\x03\x38\x2b\x7b\x68\xec\x34\x00\xa9\x71\x5c\x2f\xc0\x90\x34\x33\x54\xdd\xd4\xa8\x56\xa2\x79\xee\x17\xf5\xf0\x8a\xe6\xc1\xd7\x85\xab\x6d\x67\x22\x54\x93\xa3\x8c\x37\x13\x94\x0d\x78\xdc\xa4\x30\x1b\x20\xb9\x60\x5d\xbe\x1b\x55\xc2\xa9\xa7\x2e\xb7\xd5\x0a\x61\x12\x0e\x13\x71\xec\xa5\x2c\x09\xde\xb1\x61\xc2\x15\x77\x3a\x81\xbc\x04\xff\x36\xa4\x2c\x86\x89\x5e\xc7\x39\xb4\xb1\x22\x74\x6d\xcc\x91\x00\xab\xee\xd6\xef\xf2\xe8\x86\xee\x6e\x7d\xf9\x03\x6d\x91\xae\x2c\x07\xae\xca\xe6\xd9\x56\x2c\xfc\x45\xb7\x2c\x9f\x91\xa0\xbb\xeb\x01\xd1\xf1\xfa\xb7\x20\x8b\xc1\x04\xe8\xf7\x20\x3a\x68\xe9\xe2\x81\xa9\x38\x85\xde\x98\x23\x97\x2c\xd5\x36\xcf\xb6\x7e\xa3\xf6\x10\x00\x4c\xfc\x5f\x51\xcc\x91\x4e\x19\x37\x80\x5a\xe1\x79\xfb\x10\x87\x82\xa2\x2e\xa7\x17\xdb\x4a\xec\x77\x87\xa9\x9b\xe1\xc4\x13\x8c\x96\xe4\x2b\xd4\x40\x62\x75\x05\xd4\xb7\x6f\x16\xc7\x6f\xca\x82\x62\xa2\x94\xae\xd5\x54\x4e\xb0\xc4\x1c\x2f\x94\xd8\x5a\xd4\x33\x7d\xa5\xd2\x05\xc0\xe9\xe3\x04\x65\x30\x45\xc1\xca\x84\xf4\x76\x51\xc8\xa7\xab\x42\x88\x83\x95\x89\xf8\x9a\xae\xa6\x38\x45\x42\xc3\x82\x95\x49\xf1\x73\xba\x1a\x23\x3c\x88\x79\xb0\x32\xc1\x29\x1c\xa0\xcd\xac\x4f\x7c\x35\x35\x5d\x1d\xe1\x88\xc7\x35\x8b\x9c\x99\x3a\x5f\x5c\x89\x14\xd1\x00\x38\x30\xcf\x13\x1c\xca\x77\xdc\xda\x6f\x8e\x46\xa3\x66\x9f\xd0\xb4\x39\xa4\x89\xfc\xc7\x08\x45\x66\x98\x2e\xa7\xf2\x72\xd7\x96\x19\x6a\x26\xf2\x6c\x4b\xdf\xf0\x9a\x79\xc5\xba\x10\x1a\x55\xbb\x9f\x72\xbf\x9b\x53\x9c\xf1\xbe\x5b\x6a\xb8\x0c\x2c\xbc\x3a\xe0\x47\xcc\x51\xf9\x04\xaf\x2a\x8e\x08\x92\x58\x0b\x97\x7c\x11\xa6\x18\xdb\xd0\x6f\x51\xd6\xad\x05\xf9\x27\x7e\xed\xbf\x33\xe5\xa2\xd5\x9a\xc8\x1f\xc5\x64\x59\x63\xcb\xaa\x5c\x58\xaa\x46\xb4\x10\x60\xb7\x64\xb5\x57\x38\x55\x7d\x64\x60\x56\xb8\xc2\xac\x3b\xd3\x32\x40\xf9\x78\x8a\x14\xaa\x3f\x0c\xaa\x62\x53\x33\xc1\xfd\xca\x04\xf7\x25\xfb\x17\x8e\xac\xa2\xbf\x82\x95\x4d\x6a\x99\xb2\x0e\xf0\x0c\x7d\x2c\xb5\xb1\x2e\x2f\xa8\xd4\x53\xd9\x69\x7a\x45\x9b\x36\x39\x45\xd3\xd4\x94\x54\x31\xff\x6a\x14\xb9\xd2\x72\x7d\xa8\x34\xc5\x88\xf4\x2d\x58\x43\x3f\x15\x04\x58\xd6\x36\x01\xdd\xde\xda\x70\x3d\xff\x67\x84\xa6\x90\xbb\xce\x77\xed\xf6\x7a\xb3\xbd\xd6\x6c\x7f\xb7\xb5\xf6\x43\xa7\x7d\xa9\xd3\xfe\xe1\xd7\xa2\x13\xd0\x55\xcc\xd4\xa9\xa9\xfd\xff\x00\x00\x00\xff\xff\x39\x55\xe1\x04\x47\x10\x00\x00")

func utilsUploadOssGoBytes() ([]byte, error) {
	return bindataRead(
		_utilsUploadOssGo,
		"utils/upload/Oss.go",
	)
}

func utilsUploadOssGo() (*asset, error) {
	bytes, err := utilsUploadOssGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "utils/upload/Oss.go", size: 4167, mode: os.FileMode(420), modTime: time.Unix(1605260354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _utilsUploadAliossGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x5f\x6f\x13\xc7\x16\x7f\xf6\x7e\x8a\x73\xfd\xb4\x8b\x9c\x75\xc2\xbd\xba\x0f\x11\xbe\x52\x48\x20\x37\x4a\x80\x28\x4e\xee\x7d\x88\x22\x34\xf1\x8e\x9d\x69\xd6\xbb\xd6\xec\x38\x24\x82\x48\x81\x52\x48\x5a\xfe\x3d\x00\xe1\x4f\x54\x81\x84\x0a\x54\x22\x50\x09\xd1\x10\x02\x7c\x98\x7a\xed\xe4\x89\xaf\x50\x9d\x99\xdd\xf5\x7a\x6d\x27\xad\x4a\x43\x1f\x5a\xa9\x78\x67\xe7\xcc\x39\xbf\x73\x7e\xe7\x9c\x39\x9b\x0a\x29\xcc\x93\x12\x85\x6a\xc5\x76\x89\xa5\x69\xac\x5c\x71\xb9\x00\x5d\x4b\xa5\x67\x97\x04\xf5\xd2\x5a\x2a\x5d\x62\x62\xae\x3a\x6b\x16\xdc\x72\x96\xd8\x6c\xa9\xea\x04\x3f\x3d\xae\xe7\xf5\x94\xdc\x1e\xcf\x9a\xcf\xba\x9e\x14\x75\xe5\xbf\x15\x22\xe6\xb2\x45\x66\x53\x7c\xc0\x17\x82\x95\x69\x5a\x33\x34\x6d\x81\x70\xd4\xed\x7a\xde\xf1\x6a\x61\x9e\x8a\xd3\xa4\x4c\x41\xfe\x97\x83\x74\x5a\x6e\x0c\x14\x0a\xd4\xf3\x46\xe9\xd2\x88\xd5\x65\x23\x4f\x0b\x9c\x8a\xe6\xc6\x09\xc7\x1a\x77\x99\x23\x00\x62\xaa\x0c\x4d\x2b\x56\x9d\x02\x8c\x38\x4c\x28\x5b\x23\x4e\xd1\xd5\x67\x23\xb3\x19\x20\x4d\x4b\xb1\x85\xd2\x9e\x01\x1a\x6a\xf5\x04\x67\x4e\xc9\x80\xf3\x49\xdc\x39\x68\x6a\x6b\x83\x9e\x8b\xab\xef\x82\x3f\x61\xb3\xd5\x99\x5c\x84\x40\x5b\xd6\xb4\x6c\x16\x86\x69\xe0\x88\x72\x2c\x5a\xc6\x7c\x8a\xb0\x06\xef\xe0\x88\xeb\x79\xa6\x12\xcb\x00\xe5\x1c\xff\x77\xb9\xf4\x25\x9b\x85\xd3\xf4\x1c\x14\x6c\x46\x1d\xa1\xa5\xd4\xaf\x12\xea\xcf\x01\x9e\x3b\x4d\xcf\xe9\x31\x44\x19\x68\x75\xb1\x75\xad\x5c\x30\xb4\x14\x2b\x4a\x1d\xff\xc8\x81\xc3\x6c\x34\x94\xe2\x54\x54\xb9\xa3\xa5\x96\x35\x69\x75\x90\x53\x22\x68\x10\x3b\x2d\x95\x3d\x82\xe2\xb9\x00\x88\xa9\x76\xdb\x3c\xdb\x5f\xf1\x91\xac\x52\x3d\x4c\x45\xa4\x77\x36\xe6\x75\xa4\xfd\x77\xea\xd5\xb4\xf0\x59\x51\x30\x5e\x15\x67\x66\xbf\xa2\x05\x91\x2f\x13\xdb\x06\xff\xd5\xcd\xfa\xdd\xab\xb5\x77\x6f\x1a\x9b\x2b\xfe\xf5\x3b\xb5\xad\x6f\x6b\x3b\x8f\x14\x3b\xad\x92\xba\x2b\x9f\x47\xe9\x52\xc0\x50\x06\xb0\x3c\xc6\x89\x98\x6b\x52\x56\x69\xae\x3a\x70\xd5\xcd\xb5\xfe\x5c\x2c\x13\x5a\xf2\xf3\x40\xd7\xa4\xc1\x1c\x44\xd8\x54\x0c\xa7\x64\x27\x00\xe2\x04\x1b\x70\x8e\x89\x39\xb0\xdd\x02\xb1\x25\x68\x70\x64\xf1\x54\x3d\xca\xc1\xa1\xd4\x02\xc7\x15\xe0\x56\xa8\x03\x62\x8e\x4a\x09\x53\x4b\x91\x82\x1d\x66\x91\x0a\xc3\xc0\xe0\x18\xa2\x33\x07\x06\xc7\xc6\xab\xb3\x36\x2b\x4c\x50\x62\x19\x5a\x4a\xb1\xa3\x1c\x32\xa3\xa0\x9d\xe4\x6e\xf9\x24\xb3\x69\x33\x6e\xcd\x80\x61\xa9\xda\xc6\xbe\xc4\xa0\x11\xce\x16\x30\xcb\x3a\x52\x04\x8d\xa7\x17\xeb\x1b\x6b\x9d\x98\x6a\x1e\xfd\x9b\xb3\x38\x67\x2a\x26\x9f\x89\xb0\xb0\x7f\xe5\x59\xc9\x99\xe2\x9d\xaa\x83\x2e\x56\x18\xa7\xd6\x88\x03\xcc\x11\xff\xfe\x97\x01\xba\xc7\x4a\x0e\xb5\xa6\x26\xc6\x0e\x35\xdc\x91\xd5\xb0\x8f\x04\x8e\x4b\xe4\x13\x63\x71\x77\x31\x52\xff\x9d\x9c\x1c\x1f\x96\x66\x43\xfc\xc9\x44\x1d\xf1\x54\xc0\x4e\x2c\x32\x4f\xe0\x19\xf0\x5f\xbe\xdd\xfd\xe9\x71\xfd\xde\x4b\xff\xd6\x0f\xfe\x8b\x7b\xfe\xc6\xb3\xe0\xe2\x8a\x4b\xb6\x85\xc8\x00\x9d\x79\x4a\xc9\xac\xeb\xda\x7f\x62\x08\xb2\x59\xf0\x57\x9f\xd4\xef\xbe\x50\x75\x14\x07\xfa\xcb\xca\x25\x2d\x15\xc0\x48\x04\xa8\x0b\xfa\xae\x75\x7b\x1c\x87\x8d\xdf\xd4\x50\xa5\x64\x87\x94\x21\xb8\x01\xd3\x33\x38\xb6\xfc\x75\x2a\x53\xb9\x80\xd0\xea\x77\x5e\x35\xde\x5d\xfe\xc3\xad\x31\x9e\x72\x72\x42\xc3\x6b\x1a\x4f\x50\xae\xcb\x10\x18\x61\xbd\xed\x07\xb7\x95\x85\x61\x1a\x28\x1f\x23\x9e\x38\xe5\x5a\xac\xc8\xa8\x05\xbb\x1f\x6f\xfb\x0f\xbf\x57\xe6\x1a\x0f\x2e\xd7\x37\x56\xfc\x5b\x37\x6a\x1f\x37\xeb\xb7\xdf\xd6\xd7\xdf\xec\xad\xbf\x8e\xea\xb8\xfd\x70\xa7\x7c\xb5\xe3\xca\x65\x59\x1f\x0e\x31\xd9\x2c\xec\xde\xf8\xd9\xbf\x79\x57\xa5\x96\xff\xcd\xd7\xb5\x8f\x8f\xeb\x17\x5f\xca\xec\xad\x70\xb7\xe2\x45\x26\x82\x60\x47\x2e\x0d\x51\x41\x98\x4d\xad\x53\x54\x90\x96\x24\xde\x37\xb6\x76\x39\x03\x67\x51\x9d\x54\x3e\x9d\xc6\xc0\xf4\x84\x9e\xa7\x67\xe4\x69\x9b\x3a\xba\x5d\x36\xe0\x18\xf4\xc1\x85\x0b\x60\x97\xa7\x7b\x67\x20\x87\x93\x6b\x52\x5b\x33\x00\x38\x45\x9b\xe3\x84\x7b\x54\x97\x8f\x13\x27\x07\xfb\xfa\x8e\xfe\x33\xa3\x4e\x1f\x88\x2a\x1e\xfe\x1c\x08\x73\xca\x61\x8b\x7a\xb2\x20\xf3\xa1\xeb\x93\xa4\x54\x62\x4e\x09\x76\x37\x3f\x34\xde\x6f\x46\x59\x20\xd4\x6b\x45\x7d\x52\xb8\x43\x55\x0a\x52\xf2\xa0\x4c\x2a\xd3\xea\xc5\x4c\x94\x0d\x87\xc5\xbc\x84\x1f\xe0\xdb\x7d\x7a\xd9\x5f\xbd\x2f\x79\xc7\x0f\x91\x49\xc4\x36\x3d\x83\xb5\x37\x49\x4a\x5a\xaa\xe8\x72\x98\xcf\xc0\x02\x9a\xe4\xc4\x29\x51\x85\x1e\xb5\x4a\xd1\x1c\x90\x4a\x85\x3a\x96\x8e\x2b\xd5\xf0\x27\x49\x09\xb7\x53\xa3\x74\xa9\x1f\x00\xe6\x33\xb8\xf8\x1f\xb1\xab\xb4\x1f\x16\x70\xb1\x6c\x28\x12\x83\x68\x06\x85\x1f\xe0\x09\x35\xf7\x4b\x28\x19\x29\xd9\xb9\xea\xdb\x02\x2c\x23\x8b\xaf\x92\x04\x0e\xb7\x11\x28\x73\xbf\x33\x81\x49\xe1\x4e\x65\x2b\x5a\xa2\x74\xc8\x25\xdb\x42\x1c\x7a\xea\x55\x6d\xd1\xb5\x5c\xdb\xbc\x38\xa8\x26\x84\xa2\x55\xa9\x45\xf7\xbc\xf6\xfb\x69\xc0\xb6\x87\x18\xc7\xe1\x06\xef\xa7\x2b\xf5\x6b\x57\xfd\xcd\x07\x8d\x87\x9b\xfe\xfb\x3b\xf5\xb5\x95\xfa\xc6\x9a\x6a\x2b\x89\xbb\x2a\x76\x4a\xb7\x18\x87\xee\x79\xaf\x0e\x2a\x85\xb5\xad\x17\xd8\x69\xa5\xc2\x30\x15\xc2\xef\x68\xf3\xff\xc4\x9e\x47\x5d\x19\x40\x23\x7a\x62\x18\xcd\x40\x11\x5c\xcf\x44\x8b\xf8\xa1\xdb\xc2\x93\xfc\x91\xbe\xb3\x22\x14\xb1\xcd\x84\xb1\x08\xbc\x45\x09\x4c\xd6\x40\xc2\x1c\xf1\x86\x18\xd7\x0d\xec\x4c\x45\x13\x19\xd3\x0d\xd9\x9c\xcc\xa1\xfc\xd9\xbc\x70\x39\x4d\xb7\x9c\x76\x98\x1d\x9c\x8e\xfc\x09\x7a\xed\xea\xab\x33\xf9\xbc\x96\x4a\x9d\x0d\xc7\x83\xc4\x77\x51\x73\x46\x0c\x9f\x0c\xad\x15\xd4\x72\x32\xc1\xfd\xd5\xf5\xda\xd6\x07\x45\x83\xbf\x76\xbd\xb1\xb3\xf2\x69\x67\x55\x85\xef\xd3\xce\x5a\x6d\xeb\xbb\x28\x82\xaa\xcd\xe3\x19\xdb\xe5\xe6\x88\x37\xc9\xab\x4e\x81\x08\x6a\xf5\x83\x9a\x62\xea\x1b\x3f\x2a\x6d\xfe\xe6\x35\xc5\xdc\x18\xf3\x84\x22\xad\xc2\x69\x91\x2d\xe6\x05\xcf\x40\x99\xf0\x79\xca\xe5\xa3\x45\x6d\x56\x66\x82\xf2\x28\xea\x65\xb2\x38\x4a\x97\x3c\xbc\xd0\xf0\x8e\x73\xb9\x2c\x70\xd4\xa3\xfc\xf4\x26\x62\x39\xdb\x42\xbc\xca\x70\x9c\xa4\x2e\x3d\x6b\x3c\xdf\xde\x5b\x7f\x2d\x3b\xd3\xe7\x2b\xa1\xbd\x8b\xd7\xfd\x1b\x57\xc2\x6c\xc2\x8e\xe7\x56\x44\x58\xcb\x67\x2a\x82\xb9\x8e\x96\x52\xce\x85\x8d\xe9\x94\x5c\xe9\x91\xc7\x06\xde\x90\x18\x88\x50\x60\x5c\xae\x9a\xd1\x51\x38\xc2\x20\x1c\xcb\x41\x2f\x26\x4d\xb8\xfe\x0f\x1c\xed\xed\x95\xd0\xc2\x37\x39\xe8\xeb\xed\x95\xb5\x27\xb1\x44\x2d\x15\x57\x99\x00\x82\x94\xd4\x83\x13\x86\xd1\x59\x54\x41\xec\xb2\xa9\xe0\x75\xd9\x44\x23\x43\x21\x8f\x7a\xc4\x28\x1a\x52\xe9\xe5\x5f\xdd\x0e\x83\x66\xbb\x3c\x31\xd8\xc6\x98\x95\xfa\x4c\xd3\x6c\xcf\xd0\x87\xfe\xbb\x6d\x95\x92\x2a\xad\xd4\x1f\x35\xb0\xa6\xf6\xef\x05\x5f\x7a\x7c\xef\xef\x32\xbf\x5b\x8c\x1f\xd4\x4a\x59\x11\xc2\x0f\x92\xc4\x4e\xb3\xc7\x3d\xdf\xfe\x9c\x83\xb0\x6c\x85\xc9\x11\x58\xcd\xff\xe7\x97\x8d\x8e\x7f\x26\xf0\x57\x1f\xed\xdd\x7f\x12\x90\x2b\x99\x19\xa2\x36\x15\x34\x39\x5a\x7f\x01\x8a\x62\xc0\x5a\x1d\xee\x8c\x30\xee\xd9\xaf\x01\x00\x00\xff\xff\x00\x4d\x6e\x97\xc4\x15\x00\x00")

func utilsUploadAliossGoBytes() ([]byte, error) {
	return bindataRead(
		_utilsUploadAliossGo,
		"utils/upload/alioss.go",
	)
}

func utilsUploadAliossGo() (*asset, error) {
	bytes, err := utilsUploadAliossGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "utils/upload/alioss.go", size: 5572, mode: os.FileMode(420), modTime: time.Unix(1605260331, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _utilsUtilsGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xc1\x6a\xf3\x30\x10\x84\xcf\xd6\x53\x08\xf3\x1f\x64\xf8\xa3\x24\xc7\x16\x72\x6a\x29\xf5\x21\x6d\x21\xa1\x97\xd2\x36\x92\xbd\x55\x94\x5a\x5a\xb1\x92\x4d\x20\xf8\xdd\x8b\xed\xd4\xa7\xde\x86\xd9\x8f\x99\xd9\xa0\xaa\x6f\x65\x80\xb7\xc9\x36\x91\x31\xeb\x02\x52\xe2\x82\x65\xb9\x41\xe9\xd0\x1b\xac\xb5\x44\x32\xcb\x51\x2f\x6a\xb2\x1d\xd0\x52\x47\xf4\xcb\x40\xd6\xd9\x64\x3b\xc8\x59\x96\x13\x18\x38\x87\x41\xc5\x44\xd6\x9b\x98\xb3\x82\xb1\xaf\xd6\x57\xbc\x8c\xaf\xaa\xb1\xf5\xcb\x11\x3d\x3c\xb5\x4e\x03\x89\x4e\x35\x7c\xe2\x0a\xae\x11\x1b\x7e\x61\xd9\xe0\x6d\xae\x6e\x94\x7b\xb2\x6e\x17\x54\x05\x03\x5b\xb0\x8c\xc0\xf0\xdb\x0d\x9f\x6a\xe4\xb6\x8d\xe9\x0e\x5d\xb0\x0d\x88\xc3\xc7\xfa\x6d\xb5\xb8\x79\xbf\xac\x57\xfd\xbf\xc3\x88\xa6\x96\xfc\x80\xca\xad\x4a\xd5\x71\x37\x46\x4e\x39\xfd\x75\xd3\x1e\x9f\xf5\x09\xaa\x54\xde\x8b\x38\x2f\x11\xa8\x4f\x65\xcd\xe7\xbf\xe4\x2f\x53\x0c\xfb\xc6\xe3\x7f\xfe\xc9\x37\x7f\x10\x0f\x84\xee\x11\xce\x22\xce\xfd\xac\x67\x3f\x01\x00\x00\xff\xff\x54\xd7\x84\xe8\x5c\x01\x00\x00")

func utilsUtilsGoBytes() ([]byte, error) {
	return bindataRead(
		_utilsUtilsGo,
		"utils/utils.go",
	)
}

func utilsUtilsGo() (*asset, error) {
	bytes, err := utilsUtilsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "utils/utils.go", size: 348, mode: os.FileMode(420), modTime: time.Unix(1605338741, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwMiddlewaresMiddlewaresGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x41\x6b\xc2\x40\x10\x85\xcf\xee\xaf\x58\x72\x6a\x8b\xab\x77\xa1\x87\x10\x43\x15\xaa\x91\x9a\x62\xa1\xf4\xb0\x66\xa7\xc9\x60\xdc\x4d\x67\x27\x15\x2b\xfe\xf7\x12\x93\x54\xe9\xed\x9b\xf7\x86\xf7\x5e\xa5\xb3\x9d\xce\x41\xee\xd1\x98\x12\x0e\x9a\xc0\x0b\x81\xfb\xca\x11\xcb\x20\x47\x2e\xea\xed\x28\x73\xfb\x71\x8e\x56\x65\xce\x32\xe1\x76\x9c\x39\xf2\x81\x10\xdf\x9a\xe4\x62\x13\x39\xf2\xf2\x51\x36\xda\x68\x09\x87\xbb\x0b\x44\xce\x7e\x62\x7e\x12\x83\xb0\x2c\xdd\x21\x21\xcc\xd1\xfa\x89\x7c\xff\xf0\x4c\x68\xf3\x53\xf0\x10\x9c\x87\x9d\xbb\x00\x2e\x9c\xb9\x75\xc5\x60\x10\x3c\xc5\x69\x30\x6c\x60\x95\xac\x7b\x7a\xed\x21\x4c\xa3\x59\x8b\xd3\xf8\x39\x4e\xe3\x96\x93\x55\x3a\x4f\x96\xeb\xf6\x98\xc5\xe1\xf4\xda\x31\x03\x6d\x80\xfe\x77\xb4\xbb\xda\xff\xc8\x59\x06\xcb\x2a\x3d\x56\xd0\x2b\x6e\x87\x1d\x87\x59\x06\x15\x77\x5c\x73\xe1\x08\x7f\x34\xa3\xb3\x57\xdb\x7b\xd5\x64\x90\x2b\xd5\xa5\x52\xdd\xa6\xbf\xa9\x17\xf8\xaa\xc1\x33\x18\xb5\x41\x2e\x7a\x75\x7d\xf4\x6a\x6e\x9a\xeb\x6f\x6a\x44\x60\xc0\x32\xea\xd2\x4f\x24\x53\x0d\x43\x71\xbe\x17\xbf\x01\x00\x00\xff\xff\x45\x1b\xd3\xb5\xa7\x01\x00\x00")

func wwwMiddlewaresMiddlewaresGoBytes() ([]byte, error) {
	return bindataRead(
		_wwwMiddlewaresMiddlewaresGo,
		"www/middlewares/middlewares.go",
	)
}

func wwwMiddlewaresMiddlewaresGo() (*asset, error) {
	bytes, err := wwwMiddlewaresMiddlewaresGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/middlewares/middlewares.go", size: 423, mode: os.FileMode(420), modTime: time.Unix(1604656307, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwRoutesAGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\x41\x4a\xc4\x30\x14\x86\xd7\x79\xa7\x08\x59\xb5\x52\x93\xc1\x65\x77\x2a\x32\x2a\x38\x82\x0e\xee\xdb\x34\xa6\xc1\x36\xaf\xa4\x89\x14\x4a\x0e\xe0\x42\xbc\x8a\x97\x9a\x7b\x48\xda\xd1\xc1\x40\x20\xf9\xff\x2f\xf9\x78\x43\x25\xdf\x2a\xad\xa8\xc3\xe0\xd5\x08\x60\xfa\x01\x9d\xa7\x19\x10\xa6\x8d\x6f\x43\xcd\x25\xf6\x42\x1b\x7b\xae\xd1\x1a\x99\x4e\x0c\x08\x9b\x67\xfe\x80\x4d\xe8\xd4\xae\xea\x55\x8c\x42\x77\x58\x57\x1d\x83\x1c\x40\x08\x7a\xf8\xf8\x3c\x7c\x7d\x97\xb4\xf5\x7e\x28\x85\x98\x5b\x1c\x7d\x14\xf0\x1a\xac\xa4\x4f\x49\x94\x39\x7a\xa6\x8d\xe5\xcb\xc5\x6d\x1d\x86\x21\xa7\x33\x10\x21\xa8\xb1\x8d\x9a\x80\x38\xbe\xbd\xd9\x67\x4c\xb0\x62\x7d\x71\x39\x47\x7e\x97\xaa\x7c\xa1\xde\x95\x1b\x0d\xda\x13\x77\x0c\x58\x41\x93\x25\x93\x7e\x5a\x0d\xd7\x68\xbd\x9a\xfc\xf2\x3b\x91\x7e\xe2\xf7\xcf\x8f\xbb\xec\x62\xb3\x29\x68\xaa\x6f\x53\x4c\x58\x1d\x4c\xd7\xec\x4d\xaf\x58\x49\x97\xb5\xce\xc3\xaf\x7e\xf3\xe2\x84\x6d\xf1\xe5\xe8\x2a\xff\x61\x7f\x79\x62\x63\x0e\x69\x47\xf8\x09\x00\x00\xff\xff\xfa\x0e\x64\xb6\x60\x01\x00\x00")

func wwwRoutesAGoBytes() ([]byte, error) {
	return bindataRead(
		_wwwRoutesAGo,
		"www/routes/a.go",
	)
}

func wwwRoutesAGo() (*asset, error) {
	bytes, err := wwwRoutesAGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/routes/a.go", size: 352, mode: os.FileMode(420), modTime: time.Unix(1604725877, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwRoutesFuncsGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xc1\x4a\x04\x31\x10\x44\xcf\xe9\xaf\x68\x72\x9a\x91\x35\xb3\x78\xf4\xa8\x17\x15\x5c\x61\xc5\x0f\x98\xed\x6d\x63\x70\x26\x3d\x26\x1d\x50\x42\xfe\x5d\x22\x78\xd0\x53\x15\xf5\x78\x87\xda\x66\x7a\x9f\x3d\x63\x92\xa2\x9c\x01\xc2\xba\x49\x52\x1c\xc0\x58\x1f\xf4\xad\x9c\x1c\xc9\x3a\xf9\x10\x2f\xbd\xc4\x40\xbd\x59\x30\xb6\x56\xf7\x28\xe7\xb2\xf0\x61\x5e\xb9\xb5\x69\x09\xa7\x6c\x61\x04\x98\xa6\x9b\x39\xf3\xad\x44\x4d\xb2\x2c\x9c\x40\xbf\x36\xc6\xbf\x1b\x66\x4d\x85\x14\x2b\x98\xee\xb9\x7f\x46\x03\x78\x2d\x91\x50\xe5\x2c\x03\xe1\x85\x0f\xd1\x75\xcc\x9f\x3a\x76\x87\xdc\xc3\xf3\xd3\x61\xb8\xda\xef\x77\xd8\xd9\x5d\x05\x63\xec\xcf\x01\x7b\x8d\xe4\x8e\xfc\x51\x38\xeb\x6f\xbe\x1c\xef\x77\x60\xda\x08\x0d\xbe\x03\x00\x00\xff\xff\x0d\xda\xff\xe3\xed\x00\x00\x00")

func wwwRoutesFuncsGoBytes() ([]byte, error) {
	return bindataRead(
		_wwwRoutesFuncsGo,
		"www/routes/funcs.go",
	)
}

func wwwRoutesFuncsGo() (*asset, error) {
	bytes, err := wwwRoutesFuncsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/routes/funcs.go", size: 237, mode: os.FileMode(420), modTime: time.Unix(1605338859, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwRoutesR_aGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\xc1\x4a\xc5\x30\x10\x85\xe1\x75\xe6\x29\x86\xac\x12\xa9\xb5\xb8\x74\xa7\x6e\xd4\x85\x82\x3e\x41\x4d\xc7\x34\x98\x66\x42\x3a\xc1\x48\xe9\xbb\x5f\x02\x77\x77\xe0\xfc\x5f\x9e\xdd\xef\xec\x09\x0b\x57\xa1\x1d\x20\x6c\x99\x8b\xa0\x01\xa5\x7d\x90\xb5\x7e\x8f\x8e\xb7\x3b\x1f\xd2\xad\xe7\x14\x5c\x5f\x1a\x2c\x80\xfc\x67\xc2\xcf\x8e\x1e\x71\x97\x52\x9d\xe0\x01\xea\x69\xde\xe9\x99\x93\x14\x8e\x91\x0a\x9c\x00\x3f\x35\x39\x34\xf9\x9a\x5a\x7c\x4d\x0b\x35\xe3\xa4\xe1\x8d\x0f\x69\xec\x31\x35\xb1\x1d\x3b\x69\xe3\xdb\xd7\xc7\xbb\xb9\x9f\xa6\x01\xfb\xfb\x72\x80\x52\x7a\xa5\x18\x59\x3f\xa0\xfe\xe3\x12\x17\x3d\x80\x3a\x2d\x9c\x70\x09\x00\x00\xff\xff\x8b\x91\x3b\xc2\xba\x00\x00\x00")

func wwwRoutesR_aGoBytes() ([]byte, error) {
	return bindataRead(
		_wwwRoutesR_aGo,
		"www/routes/r_a.go",
	)
}

func wwwRoutesR_aGo() (*asset, error) {
	bytes, err := wwwRoutesR_aGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/routes/r_a.go", size: 186, mode: os.FileMode(420), modTime: time.Unix(1605338859, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwRoutesGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xc1\x4a\xc3\x30\x18\xc7\xcf\xfd\x9e\x22\xe4\xd4\x8a\x26\x3b\xf4\x0d\x86\x7a\xda\x0e\x13\xf1\x20\x43\x62\x9a\xd5\x0f\xdb\x24\xa4\xa9\x1d\x8c\x5e\x15\xc1\xa3\x27\x9f\x40\x3c\x28\xe2\x41\x7c\x1f\xa7\x7b\x0c\x69\xbb\x49\x05\xc5\x5b\xc8\xff\xf7\xc1\xff\xff\xb3\x42\x9e\x8b\x54\x91\xaa\xaa\x00\x30\xb7\xc6\x79\x12\x42\x40\x53\xf4\x67\xe5\x29\x93\x26\xe7\x29\xea\x9d\xd4\x68\x94\xcd\x8b\x42\x40\x17\x0b\x36\x32\x49\x99\xa9\xb1\xc8\x55\x5d\xf3\xaa\xaa\x78\x8e\x49\x92\xa9\x4a\x38\x55\xfc\x85\x38\x53\xfa\xff\xd2\x13\x61\x91\x42\x04\xc0\x39\xf9\x78\xb9\x5f\x5e\xde\xac\x5e\x9f\x3e\x6f\x9f\x61\x56\x6a\x49\x26\x2a\xc5\xc2\x2b\x37\x69\xd9\x50\x58\x4b\xb6\x52\xd4\x6c\x57\xa7\xa8\x55\x44\x16\x10\x70\x4e\x66\xe2\x02\xa5\xd1\x0c\xa5\x81\x40\x58\xcb\x0e\xbc\xf0\x28\xf7\x30\x53\x21\xe5\xbd\x94\x6e\x13\xca\x78\xd1\xa6\x3f\xfe\xa3\xfe\x5d\x48\xd7\x48\x1f\xdf\x20\x87\x85\x0a\x7b\xd3\xd9\xe8\x68\x68\x5c\x11\x41\x53\xe4\x38\x51\x33\x51\x66\x7e\x0a\x41\x37\x8e\xb5\xbd\x9b\xda\x6c\xdf\x99\xd2\x86\x94\xd3\x68\xcd\x0a\x8b\xdf\x5c\x23\xe1\x17\xb6\x51\xb3\xc1\xe3\x41\x3c\xed\x1a\x8c\x4d\x47\x2a\xe7\xe2\x41\x1c\x41\xdd\xba\x5b\x5d\x3d\x2c\x1f\xef\xde\xdf\xae\xe3\x41\xdc\xb9\xeb\xf2\x50\xfa\x79\xe7\x6c\x68\xb4\x57\x73\xdf\x48\x83\x1a\xbe\x02\x00\x00\xff\xff\x57\xf9\xfa\x9b\x07\x02\x00\x00")

func wwwRoutesGoBytes() ([]byte, error) {
	return bindataRead(
		_wwwRoutesGo,
		"www/routes.go",
	)
}

func wwwRoutesGo() (*asset, error) {
	bytes, err := wwwRoutesGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/routes.go", size: 519, mode: os.FileMode(420), modTime: time.Unix(1604725877, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwRoutes_apiAGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xcc\x31\x0e\xc2\x30\x0c\x40\xd1\x19\x9f\xc2\xca\xd4\x22\xa8\xf7\xee\xa8\x3b\x62\x47\x21\x94\xd4\x42\x8d\x23\xd7\x99\xaa\x1e\x80\x01\x71\x15\x2e\xd5\x7b\xa0\xb2\xfd\xbf\xbc\xec\xc3\xd3\xc7\x1e\x55\x8a\xf5\xd3\xd5\x67\x06\xe0\x31\x8b\x1a\xba\xc8\x36\x94\x5b\x13\x64\xa4\xc8\xe9\x18\x25\x71\xd8\xca\x01\x10\xe1\xfa\x7a\xaf\x9f\xaf\xcf\xdc\xe2\x60\x96\x5b\xa2\x79\x90\xc9\x16\xda\x8c\x47\x49\x01\xcf\x9b\x59\x29\xee\x23\xa7\xe6\x3f\xda\xa9\x94\x5c\xe3\x0c\x3b\x6d\xba\xd3\xa5\x72\xe4\x0e\x68\x72\x97\x1a\x16\xf8\x05\x00\x00\xff\xff\x25\xf6\xb4\xc1\x8c\x00\x00\x00")

func wwwRoutes_apiAGoBytes() ([]byte, error) {
	return bindataRead(
		_wwwRoutes_apiAGo,
		"www/routes_api/a.go",
	)
}

func wwwRoutes_apiAGo() (*asset, error) {
	bytes, err := wwwRoutes_apiAGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/routes_api/a.go", size: 140, mode: os.FileMode(420), modTime: time.Unix(1596776922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwRoutes_apiFuncsGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\x31\x4b\x04\x31\x10\x85\xeb\xcc\xaf\x18\x52\xed\xca\x99\x3d\x2c\x2d\xb5\x51\xc1\x13\x4e\xac\x25\x97\x1d\x63\x70\x37\xb3\x26\x13\x50\x42\xfe\xbb\x44\xb0\xf0\xaa\xf7\x78\x1f\x5f\xf1\x36\xeb\x3e\xac\x27\x4c\x5c\x84\xf2\xab\xdd\x02\x40\x58\x37\x4e\x82\x03\x28\xed\x83\xbc\x97\x93\x71\xbc\x4e\x3e\xc4\x4b\xcf\x31\xb8\xde\x34\x28\x5d\xab\x79\xe4\xb9\x2c\x74\xb0\x2b\xb5\x36\x2d\xe1\x94\x35\x8c\x00\xd3\x74\x63\x33\xdd\x72\x94\xc4\xcb\x42\x09\xe4\x7b\x23\xfc\xbf\x61\x96\x54\x9c\x60\x05\xd5\x3d\x73\x66\x34\x80\xb7\x12\x1d\x0a\xcf\x3c\x38\xbc\xf0\x21\x9a\x8e\xe9\x4b\xc6\xee\x38\xf3\xf0\xfc\x74\x18\xae\xf6\xfb\x1d\x76\x76\x57\x41\x29\xfd\x7b\x42\x5f\xa3\x33\x47\xfa\x2c\x94\xe5\x2f\x5f\x8e\xf7\x3b\x50\x6d\x84\x06\x3f\x01\x00\x00\xff\xff\x10\xe5\x3a\xd3\xf1\x00\x00\x00")

func wwwRoutes_apiFuncsGoBytes() ([]byte, error) {
	return bindataRead(
		_wwwRoutes_apiFuncsGo,
		"www/routes_api/funcs.go",
	)
}

func wwwRoutes_apiFuncsGo() (*asset, error) {
	bytes, err := wwwRoutes_apiFuncsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/routes_api/funcs.go", size: 241, mode: os.FileMode(420), modTime: time.Unix(1605338871, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	".dockerignore":                  Dockerignore,
	".gitignore":                     Gitignore,
	"Dockerfile":                     dockerfile,
	"README.md":                      readmeMd,
	"api_docs/.gitignore":            api_docsGitignore,
	"api_docs/01.index.http":         api_docs01IndexHttp,
	"api_docs/02.api.http":           api_docs02ApiHttp,
	"api_docs/http-client.env.json":  api_docsHttpClientEnvJson,
	"conf.example.yml":               confExampleYml,
	"dev_Dockerfile":                 dev_dockerfile,
	"dev_build_docker.sh":            dev_build_dockerSh,
	"dev_docker-compose.yml":         dev_dockerComposeYml,
	"docs/.gitignore":                docsGitignore,
	"global/a.go":                    globalAGo,
	"global/conf.go":                 globalConfGo,
	"global/consts.go":               globalConstsGo,
	"global/types.go":                globalTypesGo,
	"go.mod":                         goMod,
	"go.sum":                         goSum,
	"libs/aes.go":                    libsAesGo,
	"libs/controller.go":             libsControllerGo,
	"libs/mongo.go":                  libsMongoGo,
	"libs/redis.go":                  libsRedisGo,
	"libs/resp.go":                   libsRespGo,
	"main.go":                        mainGo,
	"models/base.go":                 modelsBaseGo,
	"models/base_pipeline.go":        modelsBase_pipelineGo,
	"prod_docker-compose.yml":        prod_dockerComposeYml,
	"prod_docker_build.sh":           prod_docker_buildSh,
	"runtime/.gitkeep":               runtimeGitkeep,
	"service/base.go":                serviceBaseGo,
	"static/favicon.ico":             staticFaviconIco,
	"static/index.html":              staticIndexHtml,
	"utils/upload/Oss.go":            utilsUploadOssGo,
	"utils/upload/alioss.go":         utilsUploadAliossGo,
	"utils/utils.go":                 utilsUtilsGo,
	"www/middlewares/middlewares.go": wwwMiddlewaresMiddlewaresGo,
	"www/routes/a.go":                wwwRoutesAGo,
	"www/routes/funcs.go":            wwwRoutesFuncsGo,
	"www/routes/r_a.go":              wwwRoutesR_aGo,
	"www/routes.go":                  wwwRoutesGo,
	"www/routes_api/a.go":            wwwRoutes_apiAGo,
	"www/routes_api/funcs.go":        wwwRoutes_apiFuncsGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	".dockerignore": &bintree{Dockerignore, map[string]*bintree{}},
	".gitignore":    &bintree{Gitignore, map[string]*bintree{}},
	"Dockerfile":    &bintree{dockerfile, map[string]*bintree{}},
	"README.md":     &bintree{readmeMd, map[string]*bintree{}},
	"api_docs": &bintree{nil, map[string]*bintree{
		".gitignore":           &bintree{api_docsGitignore, map[string]*bintree{}},
		"01.index.http":        &bintree{api_docs01IndexHttp, map[string]*bintree{}},
		"02.api.http":          &bintree{api_docs02ApiHttp, map[string]*bintree{}},
		"http-client.env.json": &bintree{api_docsHttpClientEnvJson, map[string]*bintree{}},
	}},
	"conf.example.yml":       &bintree{confExampleYml, map[string]*bintree{}},
	"dev_Dockerfile":         &bintree{dev_dockerfile, map[string]*bintree{}},
	"dev_build_docker.sh":    &bintree{dev_build_dockerSh, map[string]*bintree{}},
	"dev_docker-compose.yml": &bintree{dev_dockerComposeYml, map[string]*bintree{}},
	"docs": &bintree{nil, map[string]*bintree{
		".gitignore": &bintree{docsGitignore, map[string]*bintree{}},
	}},
	"global": &bintree{nil, map[string]*bintree{
		"a.go":      &bintree{globalAGo, map[string]*bintree{}},
		"conf.go":   &bintree{globalConfGo, map[string]*bintree{}},
		"consts.go": &bintree{globalConstsGo, map[string]*bintree{}},
		"types.go":  &bintree{globalTypesGo, map[string]*bintree{}},
	}},
	"go.mod": &bintree{goMod, map[string]*bintree{}},
	"go.sum": &bintree{goSum, map[string]*bintree{}},
	"libs": &bintree{nil, map[string]*bintree{
		"aes.go":        &bintree{libsAesGo, map[string]*bintree{}},
		"controller.go": &bintree{libsControllerGo, map[string]*bintree{}},
		"mongo.go":      &bintree{libsMongoGo, map[string]*bintree{}},
		"redis.go":      &bintree{libsRedisGo, map[string]*bintree{}},
		"resp.go":       &bintree{libsRespGo, map[string]*bintree{}},
	}},
	"main.go": &bintree{mainGo, map[string]*bintree{}},
	"models": &bintree{nil, map[string]*bintree{
		"base.go":          &bintree{modelsBaseGo, map[string]*bintree{}},
		"base_pipeline.go": &bintree{modelsBase_pipelineGo, map[string]*bintree{}},
	}},
	"prod_docker-compose.yml": &bintree{prod_dockerComposeYml, map[string]*bintree{}},
	"prod_docker_build.sh":    &bintree{prod_docker_buildSh, map[string]*bintree{}},
	"runtime": &bintree{nil, map[string]*bintree{
		".gitkeep": &bintree{runtimeGitkeep, map[string]*bintree{}},
	}},
	"service": &bintree{nil, map[string]*bintree{
		"base.go": &bintree{serviceBaseGo, map[string]*bintree{}},
	}},
	"static": &bintree{nil, map[string]*bintree{
		"favicon.ico": &bintree{staticFaviconIco, map[string]*bintree{}},
		"index.html":  &bintree{staticIndexHtml, map[string]*bintree{}},
	}},
	"utils": &bintree{nil, map[string]*bintree{
		"upload": &bintree{nil, map[string]*bintree{
			"Oss.go":    &bintree{utilsUploadOssGo, map[string]*bintree{}},
			"alioss.go": &bintree{utilsUploadAliossGo, map[string]*bintree{}},
		}},
		"utils.go": &bintree{utilsUtilsGo, map[string]*bintree{}},
	}},
	"www": &bintree{nil, map[string]*bintree{
		"middlewares": &bintree{nil, map[string]*bintree{
			"middlewares.go": &bintree{wwwMiddlewaresMiddlewaresGo, map[string]*bintree{}},
		}},
		"routes": &bintree{nil, map[string]*bintree{
			"a.go":     &bintree{wwwRoutesAGo, map[string]*bintree{}},
			"funcs.go": &bintree{wwwRoutesFuncsGo, map[string]*bintree{}},
			"r_a.go":   &bintree{wwwRoutesR_aGo, map[string]*bintree{}},
		}},
		"routes.go": &bintree{wwwRoutesGo, map[string]*bintree{}},
		"routes_api": &bintree{nil, map[string]*bintree{
			"a.go":     &bintree{wwwRoutes_apiAGo, map[string]*bintree{}},
			"funcs.go": &bintree{wwwRoutes_apiFuncsGo, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
